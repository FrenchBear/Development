/* biberc.ref
** DÇfinitions de la bibliothäque biberc
** P.VIOLENT
** 25/4/91, 13/10/92, 26/11/92, 
**  6/12/92 strop.c
** 18/12/92 getenvstr de type char *
** 12/04/93 Affichage de l'heure
**  2/02/94 strncmp / strnicmp
** 10/02/94 szLTrim
** 23/02/94 unixtimeix
*/

#ifndef _INC_BIBERC
#define _INC_BIBERC

#include <stdio.h>	// FILE
#include <curses.h>	// WINDOW

#ifdef __cplusplus
extern "C" {
#endif 

extern WINDOW *current_window;

#define UC unsigned char

extern char szSysteme[];
extern char szNomOperateur[];

// char *strstr(char *, char *);
UC   *strinsnc(UC *, int);
UC   *strdelnc(UC *, int);
char *GetEnvString(char *, char *, char *);
char *szDateFr(void);
char *szRTrim(char *);
char *szLTrim(char *);
char *szFiltreO(char *);

// int stricmp(UC *, UC *);
// int strnicmp(UC *, UC *, int);

long unixtime(int, int, int);
long unixtimeix(long);
long ixtimeunix(long);

void AfficheHeure(void);
void InitHeure(void);
void FinHeure(void);

/* quelques dÇfinitions manquant aux curses... */
#define KEY_BTAB	1
#define KEY_END		347
#define KEY_PGUP	KEY_PPAGE
#define KEY_PGDN	KEY_NPAGE
#define KEY_TAB		9
#define KEY_CTRL_A	1
#define KEY_CTRL_D	4
#define KEY_CTRL_R	18
#define KEY_CTRL_X	24
#define KEY_CTRL_Y	25
#define KEY_RETURN	10
#define KEY_BACK	8
#define KEY_ESPACE	32
#define KEY_SHIFT_TAB	KEY_BTAB
#define KEY_ESCAPE	27
#define KEY_ESC		27
#define KEY_INSERT	KEY_IC
#define KEY_DELETE	127

#if defined(M_TERMCAP)
#define INVERSE		A_STANDOUT
#define BRILLANT	A_STANDOUT
#define SOULIGNE	A_STANDOUT
#define DIMINUE		A_STANDOUT
#define CLIGNOTANT	A_STANDOUT
#else
#define INVERSE		A_REVERSE
#define BRILLANT	A_BOLD
#define SOULIGNE	A_UNDERLINE
#define DIMINUE		A_DIM
#define CLIGNOTANT	A_BLINK
#endif

/* Nb de lignes et de colonnes d'une fenÍtre */
#define wmaxy(w)	(w->_maxy)
#define wmaxx(w)	(w->_maxx)

extern UC *szBoxd, *szBoxs;

#define LINPUT (LINES-4)
#define LFKEYS (LINES-2)
#define LMSG   (LINES-1)

typedef char *MENU[];

typedef struct
{ int	iType;
  int	iLig, iCol;
  int	iLgr;
  char	*szVar;
  char	*szValid;
} GRILLE;

/* prototypes de esecr.c */
void InitWin(WINDOW *w);
void	stopcurses(void);
int	traitesignal(int);
void	startcurses(void);
void	SignalDefaut(void);
void	SignalApp(void);
void	InitEcran(void);
void	FinEcran(void);
void	NoDelInterrupt(void);
int	getch2(void);
int	wgetch2(WINDOW *);
void	Refresh(void);
void	Cartouche(char *, char *, char *);
void	CartoucheStd(char *);
void	ClsZone(int, int);
void	ClsClient(void);
void	Titre(char *);
void	FkeysL(UC *, int);
void	Fkeys(UC *);
void	Message(char *);
void	Pause(void);
void	itemMenu(int, int ,char *, int);
void	AfficheMenu(char * *);
int	iDoMenu(char * *);

/* box.c */
void	wdrawbox(WINDOW *,UC *,int ,int ,int ,int );
void	drawbox(UC *,int ,int ,int ,int );
void	vline(UC *,int ,int ,int);
void	wvLine(WINDOW *,UC *,int ,int ,int);
void	hline(UC *,int ,int ,int);
void	whline(WINDOW *,UC *,int ,int ,int);

int	iAlert(char *,char *,int ,int ,char *);
void	AlertOk(char *,char *);
void	AlertErr(char *, char*, char*);
void	InputMode(int, int);
int	iInput(int ,int ,UC *,int ,int , UC *);
int	iWInput(WINDOW *, int ,int ,UC *,int ,int , UC *);
void	AfficheGrille(GRILLE *);
int	iSaisieGrille(GRILLE *);
void	ErrorLog(char *, char *, char *, char *);

int fileselect(char *,char *,int,char *,char *,char *,char *);
int exist(char *);

int instring(UC *,UC);
UC maj(UC);
UC majAZ(UC);
UC minaz(UC);
int iValid(UC *,UC,int *);

char *szInputBox(char *, char *, char *, int);

FILE *fopenpath(char *, char *, char *);

#ifdef __cplusplus
}
#endif 

#endif		// ifdef _INC_BIBERC