Attributes Attribute      <Attribute> <VB_Name> <=> <"modExpression"> 
Externe    Option         <Option> <Explicit> 
Externe    Dim            <Public> <iTokenExp> <As> <Integer> 
Externe    Dim            <Private> <iNiv> <As> <Integer> 
Procédure  Procédure      <Public> <Sub> <Expression> <(> <)> 
Procédure  Dim            <Dim> <bOpérateurEspace> <As> <Boolean> 
Procédure  =              <iNiv> <=> <0> 
Procédure  =              <bOpérateurEspace> <=> <False> 
Procédure  If             <If> <bFinExp> <Then> 
Procédure  Exit           <Exit> <Sub> 
Procédure  Do             <Do> 
Procédure  While          <While> <tToken> <(> <iTokenExp> <)> <=> <"("> <Or> <tToken> <(> <iTokenExp> <)> <=> <"-"> <Or> <tToken> <(> <iTokenExp> <)> <=> <"Not"> <Or> <tToken> <(> <iTokenExp> <)> <=> <"#"> 
Procédure  If             <If> <tToken> <(> <iTokenExp> <)> <=> <"("> <Then> 
Procédure  =              <iNiv> <=> <iNiv> <+> <1> 
Procédure  =              <iTokenExp> <=> <iTokenExp> <+> <1> 
Procédure  Wend           <Wend> 
Procédure  If             <If> <tToken> <(> <iTokenExp> <)> <=> <")"> <Then> 
Procédure  GoTo           <GoTo> <FermetureParenthèse> 
Procédure  If             <If> <tToken> <(> <iTokenExp> <)> <=> <"New"> <Or> <tToken> <(> <iTokenExp> <)> <=> <"AddressOf"> <Or> <tToken> <(> <iTokenExp> <)> <=> <"TypeOf"> <Then> 
Procédure  =              <iTokenExp> <=> <iTokenExp> <+> <1> 
Procédure  EndIf          <End> <If> 
Procédure  Label          <_Label> <AutreSymbole> 
Procédure  If             <If> <Not> <IsNumericUS> <(> <tToken> <(> <iTokenExp> <)> <)> <And> <Left> <(> <tToken> <(> <iTokenExp> <)> <,> <1> <)> <<>> <""""> <And> <Left> <(> <tToken> <(> <iTokenExp> <)> <,> <1> <)> <<>> <"."> <And> <Left> <(> <tToken> <(> <iTokenExp> <)> <,> <1> <)> <<>> <"#"> <Then> 
Procédure  Call           <UtiliseSymbole> <tsInconnu> <,> <tToken> <(> <iTokenExp> <)> 
Procédure  EndIf          <End> <If> 
Procédure  =              <iTokenExp> <=> <iTokenExp> <+> <1> 
Procédure  Label          <_Label> <FermetureParenthèse> 
Procédure  While          <While> <iNiv> <>> <0> <And> <tToken> <(> <iTokenExp> <)> <=> <")"> 
Procédure  =              <iNiv> <=> <iNiv> <-> <1> 
Procédure  =              <iTokenExp> <=> <iTokenExp> <+> <1> 
Procédure  Wend           <Wend> 
Procédure  If             <If> <bFinExp> <Then> 
Procédure  Exit           <Exit> <Do> 
Procédure  If             <If> <tToken> <(> <iTokenExp> <)> <=> <"("> <Then> 
Procédure  GoTo           <GoTo> <Continue> 
Procédure  If             <If> <Left> <(> <tToken> <(> <iTokenExp> <)> <,> <1> <)> <=> <"."> <Then> 
Procédure  GoTo           <GoTo> <Continue> 
Procédure  Select         <Select> <Case> <tToken> <(> <iTokenExp> <)> 
Procédure  Case           <Case> <"+"> <,> <"-"> <,> <"*"> <,> <"/"> <,> <"^"> <,> <"Mod"> <,> <"\"> 
Procédure  Case           <Case> <">"> <,> <">="> <,> <"<"> <,> <"<="> <,> <"="> <,> <"<>"> <,> <"="> <,> <"Is"> <,> <"Like"> 
Procédure  Case           <Case> <"And"> <,> <"Or"> <,> <"Eqv"> <,> <"Imp"> <,> <"Xor"> 
Procédure  Case           <Case> <":="> <,> <","> <,> <"&"> 
Procédure  Case           <Case> <"To"> <,> <"Step"> <,> <"In"> <,> <"As"> 
Procédure  Case           <Case> 
Procédure  Else           <Else> 
Procédure  EOF            
Procédure  If             <If> <Not> <bOpérateurEspace> <Then> 
Procédure  =              <bOpérateurEspace> <=> <True> 
Procédure  GoTo           <GoTo> <AutreSymbole> 
Procédure  EOF            
Procédure  Else           <Else> 
Procédure  Stop           <Stop> 
Procédure  EndIf          <End> <If> 
Procédure  EndSelect      <End> <Select> 
Procédure  =              <iTokenExp> <=> <iTokenExp> <+> <1> 
Procédure  Label          <_Label> <Continue> 
Procédure  Loop           <Loop> 
Procédure  EndSub         <End> <Sub> 

===============================================
Table des symboles Local  Expression

Symbole                   TypeSymb  Portée Type                 U Définition
bOpérateurEspace          Variable  Local  Boolean              T C:\Development\GitHub\Development\Ercem Microbsoft\Outils\AnalyseVB\Expression.bas, 13 
FermetureParenthèse       Étiquette Local                       T C:\Development\GitHub\Development\Ercem Microbsoft\Outils\AnalyseVB\Expression.bas, 42 
AutreSymbole              Étiquette Local                       T C:\Development\GitHub\Development\Ercem Microbsoft\Outils\AnalyseVB\Expression.bas, 36 
Continue                  Étiquette Local                       T C:\Development\GitHub\Development\Ercem Microbsoft\Outils\AnalyseVB\Expression.bas, 69 
===============================================

Procédure  Procédure      <Private> <Function> <bFinExp> <(> <)> <As> <Boolean> 
Procédure  =              <bFinExp> <=> <True> 
Procédure  If             <If> <iTokenExp> <>> <iNbToken> <Then> 
Procédure  Exit           <Exit> <Function> 
Procédure  If             <If> <iNiv> <=> <0> <And> <(> <tToken> <(> <iTokenExp> <)> <=> <","> <Or> <tToken> <(> <iTokenExp> <)> <=> <")"> <)> <Then> 
Procédure  Exit           <Exit> <Function> 
Procédure  Select         <Select> <Case> <tToken> <(> <iTokenExp> <)> 
Procédure  Case           <Case> <";"> 
Procédure  Exit           <Exit> <Function> 
Procédure  Case           <Case> <"For"> 
Procédure  Exit           <Exit> <Function> 
Procédure  Case           <Case> <"GoTo"> 
Procédure  Exit           <Exit> <Function> 
Procédure  Case           <Case> <"GoSub"> 
Procédure  Exit           <Exit> <Function> 
Procédure  Case           <Case> <"Resume"> 
Procédure  Exit           <Exit> <Function> 
Procédure  Case           <Case> <"Then"> 
Procédure  Exit           <Exit> <Function> 
Procédure  Case           <Case> <"Else"> 
Procédure  Exit           <Exit> <Function> 
Procédure  EndSelect      <End> <Select> 
Procédure  =              <bFinExp> <=> <False> 
Procédure  EndSub         <End> <Function> 

===============================================
Table des symboles Local  bFinExp

Symbole                   TypeSymb  Portée Type                 U Définition
===============================================

Procédure  Procédure      <Private> <Function> <IsNumericUS> <(> <ByVal> <s> <As> <String> <)> 
Procédure  Dim            <Dim> <p> <As> <Integer> 
Procédure  =              <p> <=> <InStr> <(> <s> <,> <"."> <)> 
Procédure  If             <If> <p> <>> <0> <Then> 
Procédure  =              <Mid> <(> <s> <,> <p> <,> <1> <)> <=> <","> 
Procédure  =              <IsNumericUS> <=> <IsNumeric> <(> <s> <)> 
Procédure  EndSub         <End> <Function> 

===============================================
Table des symboles Local  IsNumericUS

Symbole                   TypeSymb  Portée Type                 U Définition
s                         Paramètre Local                       T C:\Development\GitHub\Development\Ercem Microbsoft\Outils\AnalyseVB\Expression.bas, 94 
p                         Variable  Local  Integer              T C:\Development\GitHub\Development\Ercem Microbsoft\Outils\AnalyseVB\Expression.bas, 95 
===============================================


===============================================
Table des symboles Module 

Symbole                   TypeSymb  Portée Type                 U Définition
iNiv                      Variable  Module Integer              T C:\Development\GitHub\Development\Ercem Microbsoft\Outils\AnalyseVB\Expression.bas, 10 
bFinExp                   Procédure Module Function             T C:\Development\GitHub\Development\Ercem Microbsoft\Outils\AnalyseVB\Expression.bas, 75 
IsNumericUS               Procédure Module Function             T C:\Development\GitHub\Development\Ercem Microbsoft\Outils\AnalyseVB\Expression.bas, 94 
===============================================

