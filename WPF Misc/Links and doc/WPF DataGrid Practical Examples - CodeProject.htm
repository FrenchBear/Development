<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0073)http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>WPF DataGrid Practical Examples - CodeProject</title> 
	<link type="text/css" rel="stylesheet" href="./WPF DataGrid Practical Examples - CodeProject_files/Main.min.css">

	

<meta name="Description" content="This article provides a number of practical examples which demonstrate how to perform validation, styling, and DataSet integration with the new WPF DataGrid.; Author: Colin Eberhardt; Updated: 1 Feb 2009; Section: Windows Presentation Foundation; Chapter: Platforms, Frameworks &amp; Libraries; Updated: 1 Feb 2009">
<meta name="Keywords" content="C#3.0, .NET3.5, Windows, Dev, XAML, WPF, Beginner, Intermediate,Windows Presentation Foundation,Platforms, Frameworks &amp; Libraries,Free source code, tutorials">
<meta name="Author" content="Colin Eberhardt">
<meta name="Rating" content="General">
<meta name="Robots" content="index, follow, NOODP">
<meta name="Revisit-After" content="1 days">
<meta name="application-name" content="CodeProject">

<meta name="msapplication-navbutton-color" content="#FF9900">
<meta name="msapplication-tooltip" content="Your Development Resource.">
<meta name="msapplication-starturl" content="http://www.codeproject.com/?pinned=true">
<meta name="msapplication-task" content="name=Homepage;action-uri=http://www.codeproject.com/;icon-uri=http://www.codeproject.com/favico.ico">
<meta name="msapplication-task" content="name=Latest Articles;action-uri=http://www.codeproject.com/script/articles/Latest.aspx;icon-uri=http://www.codeproject.com/favico.ico">
<meta name="msapplication-task" content="name=Questions and Answers;action-uri=http://www.codeproject.com/script/Answers/;icon-uri=http://www.codeproject.com/favico.ico">
<meta name="msapplication-task" content="name=The Lounge;action-uri=http://www.codeproject.com/Lounge.aspx;icon-uri=http://www.codeproject.com/favico.ico">

<link rel="dns-prefetch" href="http://ajax.googleapis.com/"> 
<link rel="canonical" href="./WPF DataGrid Practical Examples - CodeProject_files/WPF DataGrid Practical Examples - CodeProject.htm">


<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - All Topics" href="http://www.codeproject.com/WebServices/ArticleRSS.aspx?cat=1">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - MFC/C++" href="http://www.codeproject.com/WebServices/ArticleRSS.aspx?cat=2">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - C#" href="http://www.codeproject.com/WebServices/ArticleRSS.aspx?cat=3">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - VB.NET" href="http://www.codeproject.com/WebServices/ArticleRSS.aspx?cat=6">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - Mobile" href="http://www.codeproject.com/WebServices/ArticleRSS.aspx?cat=18">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - ASP.NET" href="http://www.codeproject.com/WebServices/ArticleRSS.aspx?cat=4">
<link rel="alternate" type="application/rss+xml" title="CodeProject Lounge Postings" href="http://www.codeproject.com/webservices/LoungeRSS.aspx">
<link rel="search" type="application/opensearchdescription+xml" title="CodeProject" href="http://www.codeproject.com/info/OpenSearch.xml">

	<!--<base target="_top">--><base href="." target="_top">
	<link rel="icon" href="http://www.codeproject.com/favicon.ico" type="image/ico">
<link rel="shortcut icon" href="http://www.codeproject.com/favicon.ico" type="image/ico">
<link rel="apple-touch-icon" href="http://www.codeproject.com/images/FavIcon-Apple.png" type="image/png">
<script src="./WPF DataGrid Practical Examples - CodeProject_files/cb=gapi.loaded_1" async=""></script><script src="./WPF DataGrid Practical Examples - CodeProject_files/cb=gapi.loaded_0" async=""></script><script id="twitter-wjs" src="./WPF DataGrid Practical Examples - CodeProject_files/widgets.js"></script><script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/plusone.js" gapi_processed="true"></script><script id="facebook-jssdk" src="./WPF DataGrid Practical Examples - CodeProject_files/all.js"></script><script src="./WPF DataGrid Practical Examples - CodeProject_files/quant.js" async="" type="text/javascript"></script><script type="text/javascript" language="Javascript">//<![CDATA[
function defrm () { /* thanks twitter */ document.write = ''; window.top.location = window.self.location;  setTimeout(function() { document.body.innerHTML = ''; }, 0);  window.self.onload = function(evt) { document.body.innerHTML = ''; }; }if (window.top !== window.self) {  try {  if (window.top.location.host) { /* will throw */ } else { defrm(); /* chrome */ }  } catch (ex) { defrm(); /* everyone else */ } }if (typeof(DemoUrl)!='undefined')   document.write(unescape('%3Cme')+'ta http'+'-equiv="re'+'fresh"                  con'+'tent="1;url='+DemoUrl+unescape('"%3CE'));
function _dmBootstrap(file) { var _dma = document.createElement('script');  _dma.type = 'text/javascript'; _dma.async = true;  _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file) { if (typeof DMAds === 'undefined')  _dmBootstrap('cdn2.developermedia.com/a.min.js?dt=2.6.130823.1');}
(function () { _dmBootstrap('cdn1.developermedia.com/a.min.js?dt=2.6.130823.1'); setTimeout(_dmFollowup, 2000);})();

//]]>
</script><script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/a.min.js"></script>

	


<script type="text/javascript">
var clicky_site_ids = clicky_site_ids || [];
clicky_site_ids.push(100644152);
(function() {
  var s = document.createElement('script');
  s.type = 'text/javascript';
  s.async = true;
  s.src = '//static.getclicky.com/js';
  ( document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0] ).appendChild( s );
})();
</script><script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/js"></script>
<noscript>&lt;p&gt;&lt;img alt="Clicky" width="1" height="1" src="//in.getclicky.com/100644152ns.gif" /&gt;&lt;/p&gt;</noscript>



<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-1735123-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_setDomainName', 'www.codeproject.com']);
	_gaq.push(['_setSessionTimeout', '1200']); 

	(function () {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
	})(); 
</script><script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/ga.js"></script>


<script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/in.php"></script><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}
.fb_invisible{display:none}
.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}
.fb_reset > div{overflow:hidden}
.fb_link img{border:none}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}
.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}
.fb_dialog_content{background:#fff;color:#333}
.fb_dialog_close_icon{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif);cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px;top:8px\9;right:7px\9}
.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}
.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}
.fb_dialog_close_icon:hover{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_close_icon:active{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_loader{background-color:#f2f2f2;border:1px solid #606060;font-size:24px;padding:20px}
.fb_dialog_top_left,
.fb_dialog_top_right,
.fb_dialog_bottom_left,
.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}
.fb_dialog_top_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}
.fb_dialog_top_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}
.fb_dialog_bottom_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}
.fb_dialog_bottom_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}
.fb_dialog_vert_left,
.fb_dialog_vert_right,
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}
.fb_dialog_vert_left,
.fb_dialog_vert_right{width:10px;height:100%}
.fb_dialog_vert_left{margin-left:-10px}
.fb_dialog_vert_right{right:0;margin-right:-10px}
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{width:100%;height:10px}
.fb_dialog_horiz_top{margin-top:-10px}
.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}
.fb_dialog_iframe{line-height:0}
.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #3b5998;color:#fff;font-size:14px;font-weight:bold;margin:0}
.fb_dialog_content .dialog_title > span{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yd/r/Cou7n-nqK52.gif)
no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}
body.fb_hidden{-webkit-transform:none;height:100%;margin:0;left:-10000px;overflow:visible;position:absolute;top:-10000px;width:100%
}
.fb_dialog.fb_dialog_mobile.loading{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ya/r/3rhSv5V8j3o.gif)
white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}
.fb_dialog.fb_dialog_mobile.loading.centered{max-height:590px;min-height:590px;max-width:500px;min-width:500px}
#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;left:0;top:0;width:100%;min-height:100%;z-index:10000}
#fb-root #fb_dialog_ipad_overlay.hidden{display:none}
.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}
.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0 0, 0 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}
.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%
}
.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0 0, 0 100%, from(#4966A6),
color-stop(0.5, #355492), to(#2A4887));border:1px solid #29447e;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset,
rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}
.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}
.fb_dialog_content .dialog_content{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}
.fb_dialog_content .dialog_footer{background:#f2f2f2;border:1px solid #555;border-top-color:#ccc;height:40px}
#fb_dialog_loader_close{float:left}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}
.fb_iframe_widget{display:inline-block;position:relative}
.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}
.fb_iframe_widget iframe{position:absolute}
.fb_iframe_widget_lift{z-index:1}
.fb_hide_iframes iframe{position:relative;left:-10000px}
.fb_iframe_widget_loader{position:relative;display:inline-block}
.fb_iframe_widget_fluid{display:inline}
.fb_iframe_widget_fluid span{width:100%}
.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}
.fb_iframe_widget_loader .FB_Loader{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}
.fb_connect_bar_container div,
.fb_connect_bar_container span,
.fb_connect_bar_container a,
.fb_connect_bar_container img,
.fb_connect_bar_container strong{background:none;border-spacing:0;border:0;direction:ltr;font-style:normal;font-variant:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal;vertical-align:baseline}
.fb_connect_bar_container{position:fixed;left:0 !important;right:0 !important;height:42px !important;padding:0 25px !important;margin:0 !important;vertical-align:middle !important;border-bottom:1px solid #333 !important;background:#3b5998 !important;z-index:99999999 !important;overflow:hidden !important}
.fb_connect_bar_container_ie6{position:absolute;top:expression(document.compatMode=="CSS1Compat"? document.documentElement.scrollTop+"px":body.scrollTop+"px")}
.fb_connect_bar{position:relative;margin:auto;height:100%;width:100%;padding:6px 0 0 0 !important;background:none;color:#fff !important;font-family:"lucida grande", tahoma, verdana, arial, sans-serif !important;font-size:13px !important;font-style:normal !important;font-variant:normal !important;font-weight:normal !important;letter-spacing:normal !important;line-height:1 !important;text-decoration:none !important;text-indent:0 !important;text-shadow:none !important;text-transform:none !important;white-space:normal !important;word-spacing:normal !important}
.fb_connect_bar a:hover{color:#fff}
.fb_connect_bar .fb_profile img{height:30px;width:30px;vertical-align:middle;margin:0 6px 5px 0}
.fb_connect_bar div a,
.fb_connect_bar span,
.fb_connect_bar span a{color:#bac6da;font-size:11px;text-decoration:none}
.fb_connect_bar .fb_buttons{float:right;margin-top:7px}
.fb_edge_widget_with_comment{position:relative;*z-index:1000}
.fb_edge_widget_with_comment span.fb_edge_comment_widget{position:absolute}
.fb_edge_widget_with_comment span.fb_send_button_form_widget{z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget .FB_Loader{left:0;top:1px;margin-top:6px;margin-left:0;background-position:50% 50%;background-color:#fff;height:150px;width:394px;border:1px #666 solid;border-bottom:2px solid #283e6c;z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.dark .FB_Loader{background-color:#000;border-bottom:2px solid #ccc}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.siderender
.FB_Loader{margin-top:0}
.fbpluginrecommendationsbarleft,
.fbpluginrecommendationsbarright{position:fixed !important;bottom:0;z-index:999}
.fbpluginrecommendationsbarleft{left:10px}
.fbpluginrecommendationsbarright{right:10px}</style><script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/in(1).php"></script><script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/in(2).php"></script><script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/in(3).php"></script><script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/in(4).php"></script><script type="text/javascript" async="" src="./WPF DataGrid Practical Examples - CodeProject_files/in(5).php"></script></head>	

<body class="chrome chrome29" data-twttr-rendered="true">

<a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#Main"><img alt="Click here to Skip to main content" class="access-link" src="./WPF DataGrid Practical Examples - CodeProject_files/t.gif"></a>





<div class="page-background">

	
	

	

	<table id="ctl00_Bn" style="width:100%;height:135px" cellpadding="0" cellspacing="0" class="banner fixed">
	<tbody><tr valign="bottom">
		<td class="blank-background" style="height:31px">&nbsp;</td>
		<td class="blank-background" rowspan="3" style="width:250px;height:135px"><a href="http://www.codeproject.com/"><img id="ctl00_Logo" tabindex="1" title="CodeProject" src="./WPF DataGrid Practical Examples - CodeProject_files/logo250x135.gif" alt="Home" style="height:135px;width:250px;border-width:0px;"></a></td>
		<td class="blank-background align-right" style="width:728px;height:31px">

<div class="container memberbar clearfix">

	<div id="ctl00_MemberMenu_GenInfo" class="float-left">10,051,497 members (55,173 online) &nbsp; &nbsp; </div>

	<div class="float-left">
		
	</div>

	<div class="float-right">

		<span id="ctl00_MemberMenu_CodeProjectTV" class="tooltip" style="margin-right:15px;">
			<a href="http://codeproject.tv/"><img src="./WPF DataGrid Practical Examples - CodeProject_files/CPTV-24.gif" width="24px" height="24px" style="vertical-align:middle;border:0"></a>
			<div class="speech-bubble-container-up" style="width:180px;line-height:20px">
				<div class="speech-bubble-up">
					<b><a href="http://codeproject.tv/">Visit CodeProject.TV</a><br>
					<a id="ctl00_MemberMenu_DiscussCPTV" href="http://www.codeproject.com/Forums/1829610/CodeProject-TV.aspx">Discuss CodeProject.TV</a></b>
				</div>
				<div class="speech-bubble-pointer-up">
					<div class="speech-bubble-pointer-up-inner"></div>
				</div>
			</div>
		</span>

		

		

		

			<script type="text/javascript">//<!--
			function doSubmit(secure)
			{
				if (secure)
					document.subForm.action = "https://www.codeproject.com/script/Membership/LogOn.aspx?rp=%2fArticles%2f30905%2fWPF-DataGrid-Practical-Examples"
				else
					document.subForm.action = "https://www.codeproject.com/script/Membership/LogOn.aspx?rp=%2fArticles%2f30905%2fWPF-DataGrid-Practical-Examples"
				document.subForm.submit();
				return true;
			}//-->
			</script>

			<a name="SignUp"></a>
			<span class="member-signin tooltip">
				<span><a href="https://www.codeproject.com/script/Membership/LogOn.aspx?rp=%2fArticles%2f30905%2fWPF-DataGrid-Practical-Examples">Sign in</a></span>

				<div class="tooltip-flyout">
					<form name="subForm" id="subForm" action="https://www.codeproject.com/script/Membership/LogOn.aspx?rp=%2fArticles%2f30905%2fWPF-DataGrid-Practical-Examples" method="post" class="tight">

						
						<input id="FormName" name="FormName" value="MenuBarForm" type="hidden">

						<div>Email</div>
						<div><input class="small-text" type="email" name="Email" id="Email"></div>
						<div>Password</div>
						<div><input class="small-text" type="password" name="Password" id="Password"></div>
						<div class="action">
							<script type="text/javascript">
function Join(){document.location.href='http://www.codeproject.com/script/Membership/Modify.aspx';return false;}
document.write('<input type="button" class="create" onclick="return Join();" value="Join"');
document.write('<input type="hidden" name="fld_quicksign" value="true" />');
</script><input type="button" class="create" onclick="return Join();" value="Join" <input="" name="fld_quicksign">
							<input type="submit" value="Sign in" class="signin" onclick="return doSubmit(false);">
						</div>

						<div class="container">
							
							&nbsp;
							<a id="ctl00_MemberMenu_SendPassword" class="forgot float-right" href="http://www.codeproject.com/script/Membership/SendPassword.aspx?rp=%2fArticles%2f30905%2fWPF-DataGrid-Practical-Examples">Forgot your password?</a>
						</div>
					</form>

					<hr class="divider-dark">

					Sign in using <a title="Sign in using Facebook" class="oauth" href="http://www.codeproject.com/script/Membership/OAuthLogOn.aspx?auth=Facebook" style="vertical-align:middle;padding-right:3px"><img title="Sign in using Facebook" src="./WPF DataGrid Practical Examples - CodeProject_files/facebook.png" alt="" style="border-width:0px;"></a><a title="Sign in using Google" class="oauth" href="http://www.codeproject.com/script/Membership/OAuthLogOn.aspx?auth=Google" style="vertical-align:middle;padding-right:3px"><img title="Sign in using Google" src="./WPF DataGrid Practical Examples - CodeProject_files/google-plus.png" alt="" style="border-width:0px;"></a><a title="Sign in using Linkedin" class="oauth" href="http://www.codeproject.com/script/Membership/OAuthLogOn.aspx?auth=LinkedIn" style="vertical-align:middle;padding-right:3px"><img title="Sign in using Linkedin" src="./WPF DataGrid Practical Examples - CodeProject_files/linkedin.png" alt="" style="border-width:0px;"></a>
				</div>
		
	</span></div>
</div></td>
		<td class="blank-background" style="height:31px">&nbsp;</td>
	</tr>
	<tr valign="middle">
		<td class="theme1-background" style="height:94px">&nbsp;</td>
		<td class="theme1-background ad"><div class="msg-728x90" data-format="728x90" data-type="ad" data-publisher="lqm.codeproject.site" data-zone="ros" data-tags="C#3.0, .NET3.5, Windows, Dev, XAML, WPF, Beginner, Intermediate,rating4.5"><iframe id="dmad1" allowtransparency="false" style="z-index:10" width="728" height="90" marginwidth="0" marginheight="0" frameborder="0" scrolling="no"></iframe></div></td>
		<td class="theme1-background" style="height:94px">&nbsp;</td>
	</tr>
	<tr valign="top">
		<td style="height: 10px;"></td>
		<td style="height: 10px;" class="blank-background"></td>
		<td style="height: 10px;"></td>
	</tr>
</tbody></table>


	<a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#Main"><img alt="Click here to Skip to main content" class="access-link" src="./WPF DataGrid Practical Examples - CodeProject_files/t.gif"></a>

	
	<div id="ctl00_TPR" class="sub-headerbar fixed">
	<table cellpadding="0" cellspacing="0" class="extended"><tbody><tr><td nowrap="nowrap">
		

<div class="navbar clearfix">
<ul class="navmenu openable">

<li><a id="ctl00_TopNavBar_Home" href="http://www.codeproject.com/">home</a>


</li><li class=""><a id="ctl00_TopNavBar_Art" class="down selected" href="http://www.codeproject.com/script/Articles/Latest.aspx">articles</a>

	<ul>
		<li class=""><a id="ctl00_TopNavBar_ArtTopicList" class="fly" onmouseover="navBarMenu.ShowMap(this, &#39;ctl00_TopNavBar_MapFlyout&#39;);" href="http://www.codeproject.com/script/Content/SiteMap.aspx">Chapters and Sections<span class="has-submenu">&gt;</span></a><ul id="ctl00_TopNavBar_MapFlyout">
			<li>
				<div id="siteMap">
					<img src="./WPF DataGrid Practical Examples - CodeProject_files/animated.gif" alt="loading" style="margin:150px;width:100px;height:100px;">
				</div>
			</li>
			</ul>
		</li>
		<li><a id="ctl00_TopNavBar_ArtSearch" class="fly break" href="http://www.codeproject.com/search.aspx">Search</a></li>
		<li><a id="ctl00_TopNavBar_ArtLatestArts" class="fly" href="http://www.codeproject.com/script/Articles/Latest.aspx?at=1,3,7">Latest Articles</a></li>
		<li><a id="ctl00_TopNavBar_ArtLatestTips" class="fly" href="http://www.codeproject.com/script/Articles/Latest.aspx?at=6">Latest Tips/Tricks</a></li>
		<li><a id="ctl00_TopNavBar_ArtTop" class="fly" href="http://www.codeproject.com/script/Articles/TopArticles.aspx?ta_so=5">Top Articles</a></li>
		<li><a id="ctl00_TopNavBar_ArtBeginner" class="fly" href="http://www.codeproject.com/search.aspx?aidlst=152&sa_us=True">Beginner Articles</a></li>
		<li><a id="ctl00_TopNavBar_ArtBlogArticles" class="fly break" href="http://www.codeproject.com/script/Articles/BlogArticleList.aspx">Technical Blogs</a></li>
		<li><a id="ctl00_TopNavBar_ArtGuide" class="fly" href="http://www.codeproject.com/info/Submit.aspx">Posting/Update Guidelines</a></li>
		<li><a id="ctl00_TopNavBar_ArtHelpForum" class="fly" href="http://www.codeproject.com/Forums/1641/Article-Writing.aspx">Article Help Forum</a></li>
		<li><a id="ctl00_TopNavBar_ArtCompetition" class="fly break" href="http://www.codeproject.com/script/Awards/CurrentCompetitions.aspx?cmpTpId=1">Article Competition</a></li>
		<li><a id="ctl00_TopNavBar_ArtPostArticle" class="fly highlight1" href="http://www.codeproject.com/script/Articles/Submit.aspx">
			<img src="./WPF DataGrid Practical Examples - CodeProject_files/write-gr.png" width="19px" height="13px"> Submit an article or tip
			</a></li>
		<li><a id="ctl00_TopNavBar_ArtPostBlog" class="fly highlight2" href="http://www.codeproject.com/script/Articles/BlogFeed.aspx">
			<img src="./WPF DataGrid Practical Examples - CodeProject_files/write-or.png" width="19px" height="13px"> Post your Blog
			</a></li>		<li class="last"></li>
	</ul>

</li>



<li class=""><a id="ctl00_TopNavBar_Answers" href="http://www.codeproject.com/script/Answers/List.aspx?tab=active">quick answers</a>
	<ul>
		<li id="ctl00_TopNavBar_AQL"><a id="ctl00_TopNavBar_ArticleQuestion" class="fly highlight1" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#_comments">
			<img src="./WPF DataGrid Practical Examples - CodeProject_files/write-gr.png" width="19px" height="13px"> Ask a Question about this 
			article</a>
		</li>

		<li><a id="ctl00_TopNavBar_QAAsk" class="fly highlight2" href="http://www.codeproject.com/Questions/ask.aspx"><img src="./WPF DataGrid Practical Examples - CodeProject_files/write-or.png" width="19px" height="13px"> Ask a Question</a></li>

		
		<li><a id="ctl00_TopNavBar_QAUnanswered" class="fly" href="http://www.codeproject.com/script/Answers/List.aspx?tab=unanswered">View Unanswered Questions</a></li>
		<li><a id="ctl00_TopNavBar_QALatest" class="fly" href="http://www.codeproject.com/script/Answers/List.aspx?tab=active">View All Questions...</a></li>
		
				<li><a id="ctl00_TopNavBar_QATR_ctl00_Tag" class="fly" href="http://www.codeproject.com/script/Answers/List.aspx?tab=active&alltags=true&tags=81" style="padding-left:30px">C# questions</a></li>
			
				<li><a id="ctl00_TopNavBar_QATR_ctl01_Tag" class="fly" href="http://www.codeproject.com/script/Answers/List.aspx?tab=active&alltags=true&tags=85" style="padding-left:30px">ASP.NET questions</a></li>
			
				<li><a id="ctl00_TopNavBar_QATR_ctl02_Tag" class="fly" href="http://www.codeproject.com/script/Answers/List.aspx?tab=active&alltags=true&tags=842" style="padding-left:30px">VB.NET questions</a></li>
			
				<li><a id="ctl00_TopNavBar_QATR_ctl03_Tag" class="fly" href="http://www.codeproject.com/script/Answers/List.aspx?tab=active&alltags=true&tags=308" style="padding-left:30px">C#4.0 questions</a></li>
			
				<li><a id="ctl00_TopNavBar_QATR_ctl04_Tag" class="fly" href="http://www.codeproject.com/script/Answers/List.aspx?tab=active&alltags=true&tags=78" style="padding-left:30px">C++ questions</a></li>
			
		<li class="last"></li>
	</ul>

</li>



<li class=""><a id="ctl00_TopNavBar_Forums" href="http://www.codeproject.com/script/Forums/List.aspx">discussions</a>

	<ul>
		<li><a id="ctl00_TopNavBar_MessageBoardsAll" class="fly" href="http://www.codeproject.com/script/Forums/List.aspx">All Message Boards...</a></li>
		<li class=""><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1580997/Application-Lifecycle.aspx">Application Lifecycle<span class="has-submenu">&gt;</span></a>
<ul class="openable"><li><a class="fly" href="http://www.codeproject.com/Forums/1533717/Running-a-Business.aspx">Running a Business</a></li>
<li><a class="fly" href="http://www.codeproject.com/Forums/1533716/Sales-Marketing.aspx">Sales / Marketing</a></li>
<li><a class="fly" href="http://www.codeproject.com/Forums/1651/Collaboration-Beta-Testing.aspx">Collaboration / Beta Testing</a></li>
<li><a class="fly" href="http://www.codeproject.com/Forums/3304/Work-Training-Issues.aspx">Work &amp; Training Issues</a></li>
</ul></li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/369270/Design-and-Architecture.aspx">Design and Architecture</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/12076/ASP-NET.aspx">ASP.NET</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1580226/JavaScript.aspx">JavaScript</a>
</li>
<li class=""><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1647/C-Cplusplus-MFC.aspx">C / C++ / MFC<span class="has-submenu">&gt;</span></a>
<ul class="openable"><li><a class="fly" href="http://www.codeproject.com/Forums/4486/ATL-WTL-STL.aspx">ATL /  WTL / STL</a></li>
<li><a class="fly" href="http://www.codeproject.com/Forums/3785/Managed-Cplusplus-CLI.aspx">Managed C++/CLI</a></li>
</ul></li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1827459/Adobe-Technologies.aspx">Adobe Technologies</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1649/Csharp.aspx">C#</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1627782/Free-Tools.aspx">Free Tools</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1827460/Objective-C.aspx">Objective-C</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1832431/Ruby-On-Rails.aspx">Ruby On Rails</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1725/Database.aspx">Database</a>
</li>
<li class=""><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/186301/Hardware-Devices.aspx">Hardware &amp; Devices<span class="has-submenu">&gt;</span></a>
<ul class="openable"><li><a class="fly" href="http://www.codeproject.com/Forums/1644/System-Admin.aspx">System Admin</a></li>
</ul></li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1606152/Hosting-and-Servers.aspx">Hosting and Servers</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1643/Java.aspx">Java</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1650/NET-Framework.aspx">.NET Framework</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/13695/Mobile.aspx">Mobile</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1653293/VS-2012-2013-NET-4-5-1.aspx">VS 2012/2013 &amp; .NET 4.5.1</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1540733/Sharepoint.aspx">Sharepoint</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1004257/Silverlight-WPF.aspx">Silverlight / WPF</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1646/Visual-Basic.aspx">Visual Basic</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1640/Web-Development.aspx">Web Development</a>
</li>
<li><a class="fly" style="padding-left:30px" href="http://www.codeproject.com/Forums/1645/Site-Bugs-Suggestions.aspx">Site Bugs / Suggestions</a>
</li>

		<li class="last"></li>
	</ul>

</li>




<li class=""><a id="ctl00_TopNavBar_Features" href="http://www.codeproject.com/Feature/">features</a>

	<ul>
		<li><a id="ctl00_TopNavBar_Catalog" class="fly" href="http://www.codeproject.com/script/Catalog/List.aspx">Component &amp; Service Catalog</a></li>
		<li><a id="ctl00_TopNavBar_Comps" class="fly" href="http://www.codeproject.com/script/Awards/CurrentCompetitions.aspx?cmpTpId=1&awsac=true">Competitions</a></li>
		<li><a id="ctl00_TopNavBar_News" class="fly" href="http://www.codeproject.com/script/News/List.aspx">News</a></li>
		<li><a id="ctl00_TopNavBar_Insider" class="fly" href="http://www.codeproject.com/Feature/Insider/">The Insider Newsletter</a></li>
		<li><a id="ctl00_TopNavBar_Newsletters" class="fly" href="http://www.codeproject.com/script/Mailouts/Archive.aspx?mtpid=1">Newsletter archive</a></li>
		<li><a id="ctl00_TopNavBar_Surveys" class="fly" href="http://www.codeproject.com/script/Surveys/List.aspx">Surveys</a></li>
		<li><a id="ctl00_TopNavBar_Showcase" class="fly" href="http://www.codeproject.com/KB/showcase/">Product Showcase</a></li>
		<li><a id="ctl00_TopNavBar_Research" class="fly" href="http://www.codeproject.com/script/ResearchLibrary/Index.aspx">Research Library</a></li>

		
		<li><a id="ctl00_TopNavBar_Stuff" class="fly" href="http://www.codeproject.com/Info/Stuff.aspx">CodeProject Stuff</a></li>
		<li class="last"></li>
	</ul>

</li>


<li class=""><a id="ctl00_TopNavBar_Lounge" href="http://www.codeproject.com/Lounge.aspx">community</a>

	<ul>
		<li><a id="ctl00_TopNavBar_InsiderLnk" class="fly" href="http://www.codeproject.com/insider.aspx">The Insider News</a></li>
		<li><a id="ctl00_TopNavBar_LoungeLnk" class="fly" href="http://www.codeproject.com/Lounge.aspx">The Lounge &nbsp;</a></li>
		<li><a id="ctl00_TopNavBar_WeirdWonderful" class="fly" href="http://www.codeproject.com/Feature/WeirdAndWonderful.aspx">The Weird &amp; The Wonderful</a></li>
		<li><a id="ctl00_TopNavBar_SoapBoxLnk" class="fly" href="http://www.codeproject.com/Forums/1536756/The-Soapbox.aspx">The Soapbox</a></li>
		<li><a id="ctl00_TopNavBar_PRLnk" class="fly break" href="http://www.codeproject.com/Forums/1738007/Press-Releases.aspx">Press Releases</a></li>
		<li><a id="ctl00_TopNavBar_WhosWho" class="fly" href="http://www.codeproject.com/script/Membership/Profiles.aspx">Who's Who</a></li>
		<li><a id="ctl00_TopNavBar_MVPs" class="fly" href="http://www.codeproject.com/script/Awards/MVPWinners.aspx">Most Valuable Professionals</a></li>
		<li><a id="ctl00_TopNavBar_Companies" class="fly break" href="http://www.codeproject.com/script/Membership/Profiles.aspx?mgtid=1&mgm=True">Company Listings</a></li>

		
		<li class=""><a class="fly" href="http://www.codeproject.com/Forums/1580229/Hindi.aspx">Non-English Language
			<span class="has-submenu">&gt;</span></a>
		<ul>
		<li><a class="fly" href="http://www.codeproject.com/Forums/1580229/Hindi.aspx">General Indian Topics</a></li>
		<li><a class="fly" href="http://www.codeproject.com/Forums/1580230/Chinese.aspx">General Chinese Topics</a></li>
		</ul>
		</li><li class="last"></li>
		
	</ul>

</li>


<li class="" style="margin-left:20px"><a id="ctl00_TopNavBar_Help" href="http://www.codeproject.com/KB/FAQs/">help</a>

	<ul>
		<li><a id="ctl00_TopNavBar_HelpWhatIs" class="fly" href="http://www.codeproject.com/info/guide.aspx">What is 'CodeProject'?</a></li>
		<li><a id="ctl00_TopNavBar_HelpGeneral" class="fly break" href="http://www.codeproject.com/KB/FAQs/">General FAQ</a></li>
		<li><a id="ctl00_TopNavBar_HelpPostQuestion" class="fly break highlight1" href="http://www.codeproject.com/Questions/ask.aspx">Ask a Question</a></li>
		<li><a id="ctl00_TopNavBar_HelpBugs" class="fly" href="http://www.codeproject.com/Forums/1645/Site-Bugs-Suggestions.aspx">Bugs and Suggestions</a></li>
		<li><a id="ctl00_TopNavBar_HelpArticles" class="fly" href="http://www.codeproject.com/Forums/1641/Article-Writing.aspx">Article Help Forum</a></li>
		<li><a id="ctl00_TopNavBar_HelpSiteMap" class="fly" href="http://www.codeproject.com/script/Content/SiteMap.aspx">Site Map</a></li>
		<li><a id="ctl00_TopNavBar_HelpAdvertise" class="fly" href="http://developermedia.com/">Advertise with us</a></li>
		<li><a id="ctl00_TopNavBar_HelpJobs" class="fly" href="http://www.codeproject.com/info/Jobs/">Employment Opportunities</a></li>
		<li><a id="ctl00_TopNavBar_HelpAboutUs" class="fly" href="http://www.codeproject.com/info/about.aspx">About Us</a></li>
		<li class="last"></li>
	</ul>

</li>

</ul>

</div>
	</td><td align="right">
		

<div class="searchbar">

<form method="get" action="http://www.codeproject.com/search.aspx" name="Search" class="tight">


<table border="0" cellspacing="0" cellpadding="0" class="search"><tbody><tr><td><input tabindex="2" class="search  subdue" id="sb_tb" value="" name="q"></td><td><input type="image" src="./WPF DataGrid Practical Examples - CodeProject_files/search.gif"></td></tr></tbody></table>

<div class="hover-container">
	<div id="SearchFilter" class="search-advanced small-text align-left" style="display: none;">
	<b>Search within:<br></b>
		
		<input type="radio" id="sb_kw" name="sbo" value="kw" checked="true"><label for="sb_kw">Articles</label><br>
<input type="radio" id="sb_vkw" name="sbo" value="vkw"><label for="sb_vkw">Videos</label><br>
<input type="radio" id="sb_qa" name="sbo" value="qa"><label for="sb_qa">Quick Answers</label><br>
<input type="radio" id="sb_fm" name="sbo" value="fm"><label for="sb_fm">Messages</label><br>
<input type="radio" id="sb_ctlk" name="sbo" value="ctlk"><label for="sb_ctlk">Product Catalog</label><br>


		
		
	</div>
</div>
</form>

</div>
	</td></tr></tbody></table>
	<div class="sub-headerbar-divider"></div>
	</div>
	

	<div id="A" class="container-content-wrap fixed"> 

	<div itemscope="" itemtype="http://schema.org/Article" class="container-content"> 

		<div class="clearfix">
			<div class="float-left container-breadcrumb">
				<div><a href="http://www.codeproject.com/script/Content/SiteMap.aspx">Articles</a> » <a href="http://www.codeproject.com/Chapters/8/Platforms-Frameworks-Libraries.aspx">Platforms, Frameworks &amp; Libraries</a> » <a href="http://www.codeproject.com/KB/WPF/"><span itemprop="articleSection">Windows Presentation Foundation</span></a> » <a href="http://www.codeproject.com/KB/WPF/#Controls">Controls</a></div>
			</div>

			<div class="align-left float-right padded-top">
				


 
&nbsp;










			</div>

			<div class="float-right container-breadcrumb article-nav">
				
			</div>

			<div class="align-right float-left">
				
			</div>
		</div>

		<table class="extended container-article-parts" cellpadding="0" cellspacing="0"><tbody><tr valign="top">
		<td>

			<div id="ctl00_Nav" class="container-article-tabs">
				<div class="tabs">
					

<div class="">
	<div class="selected">Article</div><div class="unselected"><a href="http://www.codeproject.com/script/Articles/ViewDownloads.aspx?aid=30905">Browse Code</a></div><div class="unselected"><a href="http://www.codeproject.com/script/Articles/Statistics.aspx?aid=30905">Stats</a></div><div class="unselected"><a href="http://www.codeproject.com/script/Articles/ListVersions.aspx?aid=30905">Revisions (2)</a></div><div class="unselected"><a href="http://www.codeproject.com/script/Articles/ListAlternatives.aspx?aid=30905">Alternatives</a></div>
</div>	


					<!-- anchorLink used to auto-link to comments at end of article -->
					<div class="unselected"><a href="http://www.codeproject.com/MasterPages/#_comments" id="ctl00_CommentLink" class="anchorLink">Comments &amp; 
						Discussions <span id="ctl00_CmtCnt">(253)</span></a>
					</div>
				</div>

				
			</div>

		</td>
		<td>
			
			<div id="AT" class="container-article  fixed"> 
				<div class="article">

					
					 
					<div class="header">

					<a name="Main"></a>

					
					<a name="_articleTop" id="_articleTop"></a>
					<div class="title">
					
					
					<h1 id="ctl00_ArticleTitle" itemprop="name">WPF DataGrid Practical Examples</h1> 
					</div>

					
					<div class="entry">
						By <span class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=5264226" rel="author"><span itemprop="author" itemscope="" itemtype="http://schema.org/Person"><span itemprop="name">Colin Eberhardt</span></span></a></span>, 
						<span class="date" itemprop="dateModified" content="2009-02-01 17:53:00">
							1 Feb 2009</span>
			
									
					</div>

					
					<!-- Tables. Yes. I'm weak -->
					<table class="container-rating"><tbody><tr><td>
						<div id="ctl00_CurRat" class="tooltip anchorLink" style="cursor:pointer" onclick="scrollToAnchor(&#39;#_rating&#39;);" name="CurRat_30905">
				
							

<table cellpadding="0" cellspacing="0" class="small-text" itemprop="aggregateRating" itemscope="" itemtype="http://schema.org/AggregateRating"> 
<tbody><tr>
	
	<td class="nowrap">

		
			<meta itemprop="bestRating" content="5"> 
			<meta itemprop="worstRating" content="1">
		

		<span id="ctl00_ArticleRating_VI">
		<div class="nowrap rating-stars-large" style="height:19px;width:139px;position:relative;">
	<div class="clipped align-left float-left" style="height:19px;width:138px;">
		<img src="./WPF DataGrid Practical Examples - CodeProject_files/stars-fill-lg.png" style="border-width:0px;">
	</div><div class="clipped" style="height:19px;width:1px;position:relative;">
		<img src="./WPF DataGrid Practical Examples - CodeProject_files/stars-empty-lg.png" style="border-width:0px;position:absolute;top:0;right:0;">
	</div>
</div>
		</span>

		
	</td>
	
	<td id="ctl00_ArticleRating_VR" class="nowrap">
		&nbsp;
		<span id="ctl00_ArticleRating_VotesR">&nbsp;<span itemprop="ratingValue" class="rating">4.96</span> (<span itemprop="ratingCount" class="count">188</span> votes)</span>
		
	</td>

</tr>

</tbody></table>


							<div id="ctl00_RB" class="speech-bubble-container-up">
								<div class="speech-bubble-up" style="width:150px !important">
									            
<div>
<table class="feature" width="100%" height="50px" title="Voting Distribution. Recent data only" cellpadding="0" cellspacing="0"><tbody><tr class="chart-row"><td class="chart-column rating-ignore-vote" title="Outside deviation limits - not included in score."><img src="./WPF DataGrid Practical Examples - CodeProject_files/pollcol.gif" width="20pxpx" height="1px" border="0px" alt="2 votes, 1.1%" title="2 votes, 1.1%"><br><span title="2 votes">1</span></td>
<td class="chart-column rating-ignore-vote" title="Outside deviation limits - not included in score."><img src="./WPF DataGrid Practical Examples - CodeProject_files/pollcol.gif" width="20pxpx" height="1px" border="0px" alt="1 vote, 0.5%" title="1 vote, 0.5%"><br><span title="1 vote">2</span></td>
<td class="chart-column rating-ignore-vote" title="Outside deviation limits - not included in score."><img src="./WPF DataGrid Practical Examples - CodeProject_files/t.gif" width="20pxpx" height="1px" border="0px" alt="" title=""><br><span title="0 votes">3</span></td>
<td class="chart-column"><img src="./WPF DataGrid Practical Examples - CodeProject_files/pollcol.gif" width="20pxpx" height="2px" border="0px" alt="10 votes, 5.3%" title="10 votes, 5.3%"><br><span title="10 votes">4</span></td>
<td class="chart-column"><img src="./WPF DataGrid Practical Examples - CodeProject_files/pollcol.gif" width="20pxpx" height="50px" border="0px" alt="175 votes, 93.1%" title="175 votes, 93.1%"><br><span title="175 votes">5</span></td>
</tr></tbody></table><div class="small-text align-center">4.96/5 - 188 votes</div><div class="small-text align-center subdue">3 removed</div><div class="small-text align-center subdue">μ 4.83, σ<sub>a</sub> 0.89 [<a href="http://www.codeproject.com/KB/FAQs/RatingReputationFAQ.aspx#noisefilter">?</a>]</div>
</div>
								</div>
								<div class="speech-bubble-pointer-up">
									<div class="speech-bubble-pointer-up-inner"></div>
								</div>
							</div>
						</div>
					</td>
					<td>
						&nbsp;
						
					</td></tr></tbody></table>

					</div>
					
					

					
					

					
					
					

						
					

					<form name="aspnetForm" method="post" action="./WPF DataGrid Practical Examples - CodeProject_files/WPF DataGrid Practical Examples - CodeProject.htm" id="aspnetForm" style="margin:0;padding:0">
<div>
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUKMjExOTQzNjk4Mw9kFgJmD2QWBAIKDxYCHgVjbGFzcwUTc3ViLWhlYWRlcmJhciBmaXhlZGQCCw8WAh8ABRxjb250YWluZXItY29udGVudC13cmFwIGZpeGVkFhACAQ9kFgJmDxYCHgRUZXh0BboCPGRpdj48YSBocmVmPSIvc2NyaXB0L0NvbnRlbnQvU2l0ZU1hcC5hc3B4Ij5BcnRpY2xlczwvYT4gJiMxODc7IDxhIGhyZWY9Ii9DaGFwdGVycy84L1BsYXRmb3Jtcy1GcmFtZXdvcmtzLUxpYnJhcmllcy5hc3B4Ij5QbGF0Zm9ybXMsIEZyYW1ld29ya3MgJiBMaWJyYXJpZXM8L2E+ICYjMTg3OyA8YSBocmVmPSIvS0IvV1BGLyI+PHNwYW4gaXRlbXByb3A9ImFydGljbGVTZWN0aW9uIj5XaW5kb3dzIFByZXNlbnRhdGlvbiBGb3VuZGF0aW9uPC9zcGFuPjwvYT4gJiMxODc7IDxhIGhyZWY9Ii9LQi9XUEYvI0NvbnRyb2xzIj5Db250cm9sczwvYT48L2Rpdj5kAgMPZBYEAgIPDxYCHgtOYXZpZ2F0ZVVybAU4L3NjcmlwdC9Bd2FyZHMvQWRtaW4vQXdhcmRPYmplY3QuYXNweD9vYmlkPTMwOTA1Jm9idGlkPTJkZAIMDw8WAh8CBS8vc2NyaXB0L0FydGljbGVzL0FkbWluL1F1ZXVlRWRpdC5hc3B4P2FpZD0zMDkwNWRkAgUPDxYCHgdWaXNpYmxlaGRkAgkPZBYEAgMPFgQeBGhyZWYFCiNfY29tbWVudHMfAAUKYW5jaG9yTGluaxYCAgEPFgIeCWlubmVyaHRtbAUFKDI1MylkAgUPDxYCHwIFNi9zY3JpcHQvQXJ0aWNsZXMvU3VibWlzc2lvbldpemFyZC5hc3B4P2F0PTEmYXBpZD0zMDkwNWRkAgsPFgIfAAUYY29udGFpbmVyLWFydGljbGUgIGZpeGVkFgYCAQ8WAh8DZxYIZg8WAh8FBR9XUEYgRGF0YUdyaWQgUHJhY3RpY2FsIEV4YW1wbGVzZAIBDxYCHwEFvQE8YSBocmVmPSIvc2NyaXB0L01lbWJlcnNoaXAvVmlldy5hc3B4P21pZD01MjY0MjI2IiByZWw9ImF1dGhvciI+PHNwYW4gaXRlbXByb3A9ImF1dGhvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj5Db2xpbiBFYmVyaGFyZHQ8L3NwYW4+PC9zcGFuPjwvYT5kAgIPFgIfAQUTMjAwOS0wMi0wMSAxNzo1MzowMGQCAw8WAh8BBQoxIEZlYiAyMDA5ZAIDDw8WAh8DZ2RkAg0PZBYCAgIPFgIeBmFjdGlvbgUvL0FydGljbGVzLzMwOTA1L1dQRi1EYXRhR3JpZC1QcmFjdGljYWwtRXhhbXBsZXMWCAIBD2QWAgIBDxYCHwNoZAIDD2QWAgICD2QWAgIBDxBkZBYAZAIJDxYCHgtfIUl0ZW1Db3VudAIBZAILD2QWAgIBDxYCHwEFaDxhIGNsYXNzPSJhbmNob3JMaW5rIiBocmVmPSIvQXJ0aWNsZXMvMzA5MDUvV1BGLURhdGFHcmlkLVByYWN0aWNhbC1FeGFtcGxlcyNfYXJ0aWNsZVRvcCI+QXJ0aWNsZSBUb3A8L2E+ZAIND2QWAgILD2QWBAICDw8WAh8CBT0vQXJ0aWNsZXMvMzA5MDUvV1BGLURhdGFHcmlkLVByYWN0aWNhbC1FeGFtcGxlcz9kaXNwbGF5PVByaW50ZGQCBA8PFgIfAgUxL3NjcmlwdC9jb21tb24vVGVsbEZyaWVuZC5hc3B4P29idGlkPTImb2JpZD0zMDkwNWRkAg8PDxYEHwEFCVBlcm1hbGluax8CBS8vQXJ0aWNsZXMvMzA5MDUvV1BGLURhdGFHcmlkLVByYWN0aWNhbC1FeGFtcGxlc2RkAh8PFgIfAQUhQ29weXJpZ2h0IDIwMDggYnkgQ29saW4gRWJlcmhhcmR0ZGQ//PTrLFwYsassN3xj7VT86pS/IA==">
</div>

<div>

	<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="/wEWCALpjrjaBwLAlMXDBwLBlMXDBwLClMXDBwLDlMXDBwLElMXDBwLP+++tCwK5upDkC6ttG27OckUEIJkVuM0/1ojbUclP">
</div>

							
							<div id="contentdiv" class="text" itemprop="articleBody">
							



<ul class="download">
<li><a href="http://www.codeproject.com/KB/WPF/WPFDataGridExamples/WPFDataGridExamples.zip">Download source code - 65.44 KB</a></li>
</ul>

<h2>Contents</h2>

<ul>
<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#introduction">Introduction</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#overview">Article Overview</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#installing">Installing the WPF Toolkit</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#dataset">Binding to a DataSet</a></li>

<ul>
<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#displaying">Displaying Data from a DataSet</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#updates">Performing Updates</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#masterdetail">Master / Detail View</a></li>
</ul>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#layered">Binding in a Layered Application</a></li>

<ul>
<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#architecture">The Architecture</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#delete">Handling Delete Operations</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#layered_updates">Handling Updates / Inserts</a></li>
</ul>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#validation">Validation</a></li>

<ul>
<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#exception">Validation on Exceptions</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#errorinfo">Validation with IDataErrorInfo</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#valid_dataset">Validation with Bound DataSets</a></li>
</ul>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#styling">Styling</a></li>

<ul>
<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#templates">Column Templates</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#indicator">Styling the Validation Error Indicator</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#details">Row Details</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#header">Styling the Column Header</a></li>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#fun">Having Some Fun ...</a></li>
</ul>

<li><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#summary">Summary</a></li>
</ul>

<h2><a id="introduction" title="introduction" name="introduction">Introduction</a></h2>

<p>A <code>DataGrid </code>is a user interface component for displaying tabular data to the user, typically providing sorting and editing functionality, among others. <code>DataGrid</code>s have been the work-horse of various frameworks such as ASP.NET (<code>GridView</code>) and Windows Forms (<code>DataGridView</code>). However, <code>DataGrid</code>s in WPF are rather conspicuous in their absence!</p>

<p>Fortunately, the absence of this control has not hampered the popularity of WPF. The versatility of the <code>ListView</code> control allows very flexible read-only <code>DataGrid </code>functionality. Also, the lack of a <code>DataGrid </code>within the WPF APIs was an excellent opportunity for third party component providers; see Michael Sync's blog for a roundup of the five leading <a href="http://michaelsync.net/2008/08/09/any-recommendation-for-wpf-datagrid">third party WPF DataGrids</a>.</p>

<p>Eventually, in August 2008, Microsoft <a href="http://blogs.msdn.com/vinsibal/archive/2008/08/11/net-3-5-sp1-and-wpf-datagrid-ctp-is-out-now.aspx">released its DataGrid CTP</a> (Community Technology Preview - a public beta) to CodePlex to coincide with the release of the .NET Framework 3.5 SP1 and Visual Studio 2008 SP1. The .NET Service Packs provided additional WPF functions including <code>IEditableCollectionView</code>, <code>BindingGroup</code>, and alternating row styles which are all used within the WPF <code>DataGrid</code>. Another small yet very highly welcome feature of SP1 is the <code>Binding.StringFormat</code> which provides a simple mechanism for formatting bound data, as described in <a href="http://blogs.msdn.com/vinsibal/archive/2008/05/16/new-wpf-sp1-feature-data-formatting.aspx">this blog post</a>.</p>

<p>More recently, on October 22 2008, <a href="http://blogs.msdn.com/vinsibal/archive/2008/10/22/wpf-datagrid-and-the-wpftoolkit-have-released.aspx">DataGrid v1 was released</a>. This is the last update that we will see of the <code>DataGrid</code> before .NET 4.0 is released, and includes new features such as row validation, row details, and design-time support.</p>

<h2><a id="overview" title="overview" name="overview">Article Overview</a></h2>

<p>Currently, there is a lack of documentation and examples demonstrating common <code>DataGrid</code> usage scenarios (which is to be expected, as it is an out-of-band release). This article provides a number of simple usage examples which will hopefully be of use to anyone considering using the WPF <code>DataGrid</code>.</p>

<p>I cannot, of course, cover everything. If you are having problems with making the <code>DataGrid</code> do what you want, post a comment at the bottom of this article, and I will do my best to help.</p>

<h2><a id="installing" title="installing" name="installing">Installing the WPF Toolkit</a></h2>

<p>The WPF <code>DataGrid</code> is part of the WPF Toolkit. The steps to add the <code>DataGrid</code> control to your project are as follows:</p>

<ol>
<li>Install the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=ab99342f-5d1a-413d-8319-81da479ab0d7&DisplayLang=en">.NET Framework 3.5 SP1</a>.</li>

<li>Download the <a href="http://www.codeplex.com/wpf/Release/ProjectReleases.aspx?ReleaseId=15598">WPF Toolkit</a> - either source or binaries (the toolkit is entirely open source).</li>

<li>Run <em>WPFToolkit.msi</em> to install the <em>WPFToolkit.dll</em> and the WPF Toolkit design-time binaries to your <em>Program Files</em> folder.</li>

<li>Reference the <em>WPFToolkit.dll</em> in your project.</li>
</ol>

<h2><a id="dataset" title="dataset" name="dataset">Binding to a DataSet</a></h2>

<p>Probably, one of the most frequent uses of a <code>DataGrid</code> is to provide the user with CRUD functions (create, read, update, delete) for managing a persistent data source. This example describes how to connect a Typed <code>DataSet </code>to the <code>DataGrid</code> in such a way that row modifications, deletions, and insertions are written to the database.</p>

<h3><a id="displaying" title="displaying" name="displaying">Displaying Data from a DataSet</a></h3>

<p>For this example, and the others in this article, I am using the ubiquitous Northwind database. Details of how to download it for SQL Express are given in the <a href="http://msdn.microsoft.com/en-us/library/ms144235.aspx">MSDN library</a>. The <code>DataSet</code> design for these examples was created via simple drag and drop from the Server Explorer. For a thorough <code>DataSet</code> tutorial, I would recommend this <a href="http://www.asp.net/learn/data-access/tutorial-01-cs.aspx">Data Access Layer tutorial</a>.</p>
<img height="367" alt="dataset.png" src="./WPF DataGrid Practical Examples - CodeProject_files/dataset.png" width="528"> 
<p>The simplest method for displaying the <code>Customers </code>table within the WPF <code>DataGrid</code> is to add the control to our window as shown below. Note the addition of the "<em>http://schemas.microsoft.com/wpf/2008/toolkit</em>" namespace:</p>

<div class="pre-action-link" id="premain0" width="100%" style="display:block"><img id="preimg0" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="0" style="cursor: pointer;"><span id="precollapse0" preid="0" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="0">Copy Code</a></div><pre lang="xml" id="pre0" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">Window</span> <span class="code-attribute">x:Class</span><span class="code-keyword">="</span><span class="code-keyword">WPFDataGridExamples.DataSetCRUDExample"</span>
    <span class="code-attribute">xmlns</span><span class="code-keyword">="</span><span class="code-keyword">http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span>
    <span class="code-attribute">xmlns:x</span><span class="code-keyword">="</span><span class="code-keyword">http://schemas.microsoft.com/winfx/2006/xaml"</span>
    <span class="code-attribute">xmlns:dg</span><span class="code-keyword">="</span><span class="code-keyword">http://schemas.microsoft.com/wpf/2008/toolkit"</span>
    <span class="code-attribute">Title</span><span class="code-keyword">="</span><span class="code-keyword">Northwind Customer"</span> <span class="code-attribute">Height</span><span class="code-keyword">="</span><span class="code-keyword">300"</span> <span class="code-attribute">Width</span><span class="code-keyword">="</span><span class="code-keyword">600"</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Grid</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid</span> <span class="code-attribute">ItemsSource</span><span class="code-keyword">="</span><span class="code-keyword">{Binding}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Grid</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Window</span><span class="code-keyword">&gt;</span></pre>

<p>Then, construct an instance of our typed <code>dataset</code>, and populate it using the generated Table Adapter:</p>

<div class="pre-action-link" id="premain1" width="100%" style="display:block"><img id="preimg1" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="1" style="cursor: pointer;"><span id="precollapse1" preid="1" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="1">Copy Code</a></div><pre lang="cs" id="pre1" style="margin-top: 0px;"><span class="code-keyword">public</span> DataSetCRUDExample()
{
    InitializeComponent();

    <span class="code-comment">//</span><span class="code-comment"> construct the dataset
</span>    NorthwindDataSet dataset = <span class="code-keyword">new</span> NorthwindDataSet();

    <span class="code-comment">//</span><span class="code-comment"> use a table adapter to populate the Customers table
</span>    CustomersTableAdapter adapter = <span class="code-keyword">new</span> CustomersTableAdapter();
    adapter.Fill(dataset.Customers);

    <span class="code-comment">//</span><span class="code-comment"> use the Customer table as the DataContext for this Window
</span>    <span class="code-keyword">this</span>.DataContext = dataset.Customers.DefaultView;
}</pre>

<p>The resulting window will contain a grid which displays all the columns of the <code>Customers </code>table, thanks to the <code>AutoGenerateColumns</code> property of the <code>DataGrid</code> which defaults to <code lang="cs">true</code>.</p>
<img height="300" alt="datasetgrid.png" src="./WPF DataGrid Practical Examples - CodeProject_files/datasetgrid.png" width="600"> 
<p>This works well enough; however, one of the advertised features of the WPF <code>DataGrid</code> is design-time support. If you right-click on the <code>DataGrid</code> in the Visual Studio designer, you will see a <code>DataGrid </code>entry in the context menu. However, the sub-menu is a little sparse, and displays the message "You need to set ItemsSource to enable some column operations". The problem is that the <code>DataGrid </code>designer is unable to inspect the contents of the <code>ItemsSource</code> property of the <code>DataGrid</code> if it has been constructed in the code-behind.</p>

<p>An alternative method for providing data to your controls is through the use of an <code>ObjectDataProvider</code>. This class enables you to instantiate an object within your XAML resources for use as a data source. You can then invoke methods on this class in order to provide data to your controls. This method yields a few extra benefits which are described in <a href="http://www.beacosta.com/blog/?p=22">Beatriz Stollnitz's blog</a>.</p>

<p>The following class effectively performs the same <code>dataset </code>population steps as above:</p>

<div class="pre-action-link" id="premain2" width="100%" style="display:block"><img id="preimg2" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="2" style="cursor: pointer;"><span id="precollapse2" preid="2" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="2">Copy Code</a></div><pre lang="cs" id="pre2" style="margin-top: 0px;"><span class="code-keyword">public</span> <span class="code-keyword">class</span> CustomerDataProvider
{
    <span class="code-keyword">private</span> CustomersTableAdapter adapter;

    <span class="code-keyword">private</span> NorthwindDataSet dataset;

    <span class="code-keyword">public</span> CustomerDataProvider()
    {
        dataset = <span class="code-keyword">new</span> NorthwindDataSet();
        adapter = <span class="code-keyword">new</span> CustomersTableAdapter();
        adapter.Fill(dataset.Customers);
    }

    <span class="code-keyword">public</span> DataView GetCustomers()
    {
        <span class="code-keyword">return</span> dataset.Customers.DefaultView;
    }
}</pre>

<p>And, the modified XAML below uses the <code>ObjectDataPerovider</code> class to define an instance of the above class as our data source. Note that we are still binding the <code>DataGrid</code>'s <code>ItemsSource</code> to the inherited <code>DataContext</code>.</p>

<div class="pre-action-link" id="premain3" width="100%" style="display:block"><img id="preimg3" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="3" style="cursor: pointer;"><span id="precollapse3" preid="3" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="3">Copy Code</a></div><pre lang="xml" id="pre3" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">Window</span> <span class="code-attribute">...</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Window.Resources</span><span class="code-keyword">&gt;</span>
        <span class="code-comment">&lt;!--</span><span class="code-keyword"><span class="code-comment"> create an instance of our DataProvider class </span>--&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">ObjectDataProvider</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">CustomerDataProvider"</span>
            <span class="code-attribute">ObjectType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type local:CustomerDataProvider}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-comment">&lt;!--</span><span class="code-keyword"><span class="code-comment"> define the method which is invoked to obtain our data </span>--&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">ObjectDataProvider</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">Customers"</span>
          <span class="code-attribute">ObjectInstance</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource CustomerDataProvider}"</span>
          <span class="code-attribute">MethodName</span><span class="code-keyword">="</span><span class="code-keyword">GetCustomers"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Window.Resources</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">DockPanel</span> <span class="code-attribute">DataContext</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Source={StaticResource Customers}}"</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid</span> <span class="code-attribute">ItemsSource</span><span class="code-keyword">="</span><span class="code-keyword">{Binding}"</span> <span class="code-attribute">Name</span><span class="code-keyword">="</span><span class="code-keyword">dataGrid"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">DockPanel</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Window</span><span class="code-keyword">&gt;</span></pre>

<p>With the above code, the design-time support of the <code>DataGrid</code> is now available, allowing you to configure which columns are present, their bindings, sorting, etc.</p>
<img height="233" alt="designtime.jpg" src="./WPF DataGrid Practical Examples - CodeProject_files/designtime.jpg" width="560"> 
<p>This design-time support is certainly nice to have; however, it is very easily missed as it inserts a single menu option into an existing context menu. The WPF designer (Cider) does not follow the conventions of the Windows Forms and ASP.NET designers which indicate that a control has design-time support by the presence of a small button in the top right corner.</p>

<h3><a id="updates" title="updates" name="updates">Performing Updates</a></h3>

<p>When the user edits the <code>Customers </code>data within the <code>DataGrid</code>, the bound in-memory <code>DataTable</code> is updated accordingly. However, these updates are not automatically written back to the database. It is up to the developer to decide when changes to the <code>DataTable</code> are written back to the database depending on the requirements of the application. For example, in some cases, you might wish to submit a batch of changes via a "Submit" button, or you may wish to have the database updated as the user commits each row edit. In order to support these, the rows that the <code>DataTable</code> contains have a <code>RowState</code> property which indicates whether they contain changes which should be synchronized with the database. The synchronization process is easily achieved via the <code>TableAdapter</code>'s <code>Update</code> method.</p>

<p>The following example shows how the <code>RowChanged</code> and <code>RowDeleted</code> events can be handled so that changes in the <code>DataTable</code> state are written to the database each time the user changes a row:</p>

<div class="pre-action-link" id="premain4" width="100%" style="display:block"><img id="preimg4" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="4" style="cursor: pointer;"><span id="precollapse4" preid="4" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="4">Copy Code</a></div><pre lang="cs" id="pre4" style="margin-top: 0px;"><span class="code-keyword">public</span> CustomerDataProvider()
{
    NorthwindDataSet dataset = <span class="code-keyword">new</span> NorthwindDataSet();

    adapter = <span class="code-keyword">new</span> CustomersTableAdapter();
    adapter.Fill(dataset.Customers);

    dataset.Customers.CustomersRowChanged +=
        <span class="code-keyword">new</span> NorthwindDataSet.CustomersRowChangeEventHandler(CustomersRowModified);
    dataset.Customers.CustomersRowDeleted +=
        <span class="code-keyword">new</span> NorthwindDataSet.CustomersRowChangeEventHandler(CustomersRowModified);
}

<span class="code-keyword">void</span> CustomersRowModified(<span class="code-keyword">object</span> sender, NorthwindDataSet.CustomersRowChangeEvent e)
{
    adapter.Update(dataset.Customers);
}</pre>

<p>The complete example above can be found in the <code>DataSetCRUDExample</code> class which shows how a CRUD interface can be created for a <code>DataSet</code> with a few lines of code.</p>

<h3><a id="masterdetail" title="masterdetail" name="masterdetail">Master / Detail View</a></h3>

<p>A classic use of a <code>DataGrid</code> is in the display of master / details data, a common example is the display of <code>Orders </code>(master) in one table with <code>OrderLines </code>(details) displayed in another. When you select a row in the master table, the rows displayed in the details table should change to display only those which relate to the selected master row.</p>

<p>In this example, synchronized views of the <code>Customer </code>(master) and <code>Orders </code>(detail) tables of the Northwind database will be displayed.</p>

<p>The XAML below demonstrates how a master / detail view may be achieved. A second data source is added, again via the <code>ObjectDataProvider</code>, with the window displaying two <code>DataGrid</code>s, each bound to their respective data sources.</p>

<div class="pre-action-link" id="premain5" width="100%" style="display:block"><img id="preimg5" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="5" style="cursor: pointer;"><span id="precollapse5" preid="5" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="5">Copy Code</a></div><pre lang="xml" id="pre5" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">Window</span> <span class="code-attribute">...</span> <span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Window.Resources</span><span class="code-keyword">&gt;</span>
        <span class="code-comment">&lt;!--</span><span class="code-keyword"><span class="code-comment"> the customers datasource </span>--&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">ObjectDataProvider</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">CustomerDataProvider"</span>
           <span class="code-attribute">ObjectType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type local:CustomerDataProvider}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">ObjectDataProvider</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">Customers"</span> <span class="code-attribute">MethodName</span><span class="code-keyword">="</span><span class="code-keyword">GetCustomers"</span>
           <span class="code-attribute">ObjectInstance</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource CustomerDataProvider}"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>

        <span class="code-comment">&lt;!--</span><span class="code-keyword"><span class="code-comment"> the orders datasource </span>--&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">ObjectDataProvider</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">OrdersDataProvider"</span>
           <span class="code-attribute">ObjectType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type local:OrdersDataProvider}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">ObjectDataProvider</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">Orders"</span> <span class="code-attribute">MethodName</span><span class="code-keyword">="</span><span class="code-keyword">GetOrdersByCustomer"</span>
                <span class="code-attribute">ObjectInstance</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource OrdersDataProvider}"</span> <span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">ObjectDataProvider.MethodParameters</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">x:Static</span> <span class="code-attribute">Member</span><span class="code-keyword">="</span><span class="code-keyword">system:String.Empty"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">ObjectDataProvider.MethodParameters</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">ObjectDataProvider</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Window.Resources</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Grid</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Grid.RowDefinitions</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">RowDefinition</span> <span class="code-attribute">Height</span><span class="code-keyword">="</span><span class="code-keyword">*"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">RowDefinition</span> <span class="code-attribute">Height</span><span class="code-keyword">="</span><span class="code-keyword">*"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Grid.RowDefinitions</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Grid.ColumnDefinitions</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">ColumnDefinition</span> <span class="code-attribute">Width</span><span class="code-keyword">="</span><span class="code-keyword">*"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Grid.ColumnDefinitions</span><span class="code-keyword">&gt;</span>

        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid</span> <span class="code-attribute">Grid.Row</span><span class="code-keyword">="</span><span class="code-keyword">0"</span>
              <span class="code-attribute">ItemsSource</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Source={StaticResource Customers}}"</span>
              <span class="code-attribute">SelectedValuePath</span><span class="code-keyword">="</span><span class="code-keyword">CustomerID"</span>
              <span class="code-attribute">SelectionChanged</span><span class="code-keyword">="</span><span class="code-keyword">CustomerGrid_SelectionChanged"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>

        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid</span> <span class="code-attribute">Grid.Row</span><span class="code-keyword">="</span><span class="code-keyword">1"</span>
              <span class="code-attribute">ItemsSource</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Source={StaticResource Orders}}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Grid</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Window</span><span class="code-keyword">&gt;</span></pre>

<p>The <code>OrdersDataProvider</code> class looks almost exactly the same as the <code>CustomersDataProvider</code>. The one difference being the presence of the <code>GetOrdersByCustomer</code> method. This method takes a <code>CustomerID</code> as a parameter, using it to construct a filter that selects the <code>Order </code>rows which relate to the given customer. The <code>ObjectDataProvider</code> within the XAML is able to pass parameters to this method, which is shown below:</p>

<div class="pre-action-link" id="premain6" width="100%" style="display:block"><img id="preimg6" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="6" style="cursor: pointer;"><span id="precollapse6" preid="6" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="6">Copy Code</a></div><pre lang="cs" id="pre6" style="margin-top: 0px;"><span class="code-SummaryComment">///</span><span class="code-comment"> <span class="code-SummaryComment">&lt;</span><span class="code-SummaryComment">summary</span><span class="code-SummaryComment">&gt;</span>
</span><span class="code-SummaryComment">///</span><span class="code-comment"> Obtains all the orders for the given customer.
</span><span class="code-SummaryComment">///</span><span class="code-comment"> <span class="code-SummaryComment">&lt;</span><span class="code-SummaryComment">/</span><span class="code-SummaryComment">summary</span><span class="code-SummaryComment">&gt;</span>
</span><span class="code-keyword">public</span> DataView GetOrdersByCustomer(<span class="code-keyword">string</span> customerId)
{
    <span class="code-keyword">if</span> (customerId == <span class="code-keyword">null</span> || customerId == <span class="code-keyword">string</span>.Empty)
    {
        <span class="code-keyword">return</span> <span class="code-keyword">null</span>;
    }

    DataView view = NorthWindDataProvider.NorthwindDataSet.Orders.DefaultView;
    view.RowFilter = <span class="code-keyword">string</span>.Format(<span class="code-string">"</span><span class="code-string">CustomerID='{0}'"</span>, customerId);
    <span class="code-keyword">return</span> view;
}</pre>

<p>When this method is invoked for the first time, an empty string is supplied as the <code>CustomerID</code>, and no rows are returned. When the user selects a new customer in the upper grid, the <code>SelectionChanged</code> event is raised. The event handler is shown below:</p>

<div class="pre-action-link" id="premain7" width="100%" style="display:block"><img id="preimg7" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="7" style="cursor: pointer;"><span id="precollapse7" preid="7" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="7">Copy Code</a></div><pre lang="cs" id="pre7" style="margin-top: 0px;"><span class="code-keyword">private</span> <span class="code-keyword">void</span> CustomerGrid_SelectionChanged(<span class="code-keyword">object</span> sender, SelectionChangedEventArgs e)
{
    DataGrid grid = sender <span class="code-keyword">as</span> DataGrid;

    <span class="code-comment">//</span><span class="code-comment"> pass the customer ID to our Orders datasource via the ObjectDataProvider
</span>    ObjectDataProvider orderProvider = <span class="code-keyword">this</span>.FindResource(<span class="code-string">"</span><span class="code-string">Orders"</span>) <span class="code-keyword">as</span> ObjectDataProvider;
    orderProvider.MethodParameters[<span class="code-digit">0</span>] = grid.SelectedValue;
}</pre>

<p>The above code simply sets the first <code>MethodParameter</code> on the <em>Orders</em> <code>ObjectDataProvider</code> to the newly selected <code>CustomerID</code>, which is obtained from the <code>Customer </code>grid's <code>SelectedValue</code> property (note that this is because the <code>SelectedValuePath</code> is set to <code>CustomerID</code>). The <code>ObjectDataProvider</code> takes care of notifying any control which is bound to it that the data has changed. The complete example is shown below:</p>
<img height="428" alt="masterdetail.png" src="./WPF DataGrid Practical Examples - CodeProject_files/masterdetail.png" width="602"> 
<p>Any updates / deletions to the <code>Customer </code>or <code>Order </code>rows are written to the database. However, the interface is a little peculiar in that when inserting a new order row via the bottom <code>DataGrid</code>, you have to type in the related <code>CustomerID</code>. It would make sense to remove this column and the generated ID from the interface.</p>

<p>The first step is to use the "Generate Columns" command on the Visual Studio Designer. We can then remove both the generated <code>OrderID</code> column and the <code>CustomerID</code> foreign key column:</p>

<div class="pre-action-link" id="premain8" width="100%" style="display:block"><img id="preimg8" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="8" style="cursor: pointer;"><span id="precollapse8" preid="8" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="8">Copy Code</a></div><pre lang="xml" id="pre8" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid</span> <span class="code-attribute">Grid.Row</span><span class="code-keyword">="</span><span class="code-keyword">1"</span> <span class="code-attribute">ItemsSource</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Source={StaticResource Orders}}"</span>
             <span class="code-attribute">AutoGenerateColumns</span><span class="code-keyword">="</span><span class="code-keyword">True"</span> <span class="code-attribute">RowEditEnding</span><span class="code-keyword">="</span><span class="code-keyword">DataGrid_RowEditEnding"</span><span class="code-keyword">&gt;</span>
 <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>
    <span class="code-comment">&lt;!--</span><span class="code-keyword"><span class="code-comment"> &lt;dg:DataGridTextColumn
       Binding="{Binding Mode=OneWay, Path=OrderID}" Header="OrderID"/&gt; </span>--&gt;</span>
    <span class="code-comment">&lt;!--</span><span class="code-keyword"><span class="code-comment"> &lt;dg:DataGridTextColumn
       Binding="{Binding Path=CustomerID}" Header="CustomerID" /&gt; </span>--&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=EmployeeID}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">EmployeeID"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=OrderDate}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">OrderDate"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=RequiredDate}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">RequiredDate"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=ShippedDate}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">ShippedDate"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=ShipVia}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">ShipVia"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=Freight}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Freight"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=ShipName}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">ShipName"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=ShipAddress}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">ShipAddress"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=ShipCity}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">ShipCity"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=ShipRegion}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">ShipRegion"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=ShipPostalCode}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">ShipPostalCode"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span>
      <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=ShipCountry}"</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">ShipCountry"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
 <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid</span><span class="code-keyword">&gt;</span></pre>

<p>A handler for the <code>RowEditEnding</code> event is added so that the <code>CustomerID</code> can be obtained from the <code>SelectedValue</code> property of the <code>Customer</code>s<code> DataGrid</code> prior to committing the edited <code>Order </code>row:</p>

<div class="pre-action-link" id="premain9" width="100%" style="display:block"><img id="preimg9" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="9" style="cursor: pointer;"><span id="precollapse9" preid="9" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="9">Copy Code</a></div><pre lang="cs" id="pre9" style="margin-top: 0px;"><span class="code-keyword">private</span> <span class="code-keyword">void</span> DataGrid_RowEditEnding(<span class="code-keyword">object</span> sender, DataGridRowEditEndingEventArgs e)
{
    <span class="code-comment">//</span><span class="code-comment"> drill down from DataGridRow, through row view to our order row
</span>    DataGridRow dgRow = e.Row;
    DataRowView rowView = dgRow.Item <span class="code-keyword">as</span> DataRowView;
    NorthwindDataSet.OrdersRow orderRow =
          rowView.Row <span class="code-keyword">as</span> NorthwindDataSet.OrdersRow;

    <span class="code-comment">//</span><span class="code-comment"> set the foreign key to the customer ID
</span>    orderRow.CustomerID = CustomerGrid.SelectedValue <span class="code-keyword">as</span> <span class="code-keyword">string</span>;
}</pre>

<p>The complete example above is found in the <code>MasterDetailExample</code> class. However, please note that any exception that occurs when the data is being updated is not being handled, which will result in the in-memory <code>DataTable</code> no longer being synchronized with the database.</p>

<h2><a id="layered" title="layered" name="layered">Binding in a Layered Application</a></h2>

<p>The previous example demonstrated how to bind the <code>DataGrid</code> to a <code>DataSet</code>. This example is simple to implement; however, it results in a tight coupling between your database schema and your user interface. If you modify the structure of your database, perhaps to optimise performance, the generated <code>DataSet</code> will have to be updated and also the user interface code. This may be acceptable for small scale software developments where you save time and money by coupling the <code>DataSet</code> directly to your UI code; however, for large scale developments, you will typically want to decouple the two and move towards a layered architecture.</p>

<p>This example demonstrates how to use a <code>DataGrid</code> to perform CRUD operations via binding where the database integration is decoupled via a Data Access Layer (DAL).</p>

<h3><a id="architecture" title="architecture" name="architecture">The Architecture</a></h3>

<p>This example is a simple CRUD application which allows the user to edit items in the <code>Customers </code>table of the Northwind database. The example has a Data Access Layer, which exposes <code>Find</code>/ <code>Delete</code>/<code>Update </code>methods that operate on simple data objects, and a Presentation Layer that adapts these objects in such a way that they can be bound effectively by the WPF Framework. Because we are only performing CRUD functions, I have not added a Business Logic Layer (BLL); if you are a purist, you could add a pass-through BLL; however, I feel it would add little to this example.</p>

<p>The key classes within this architecture are shown below:</p>

<p><a title="Click to enlarge" href="http://www.codeproject.com/KB/WPF/WPFDataGridExamples/classdiagram.png"><img height="488" src="./WPF DataGrid Practical Examples - CodeProject_files/classdiagram_small.png" width="600" border="0"></a></p>

<p>The Data Access Layer exposes an interface for managing the lifecycle of the Customer Data Objects. The class which implements this interface uses a typed <code>DataSet</code> as a database integration layer; however, this is hidden from the clients of the DAL. The presence of this layer means that we are not directly coupled to the database schema or the generated dataset schema, i.e., we can change our schema, yet still provide the interface given below to our clients:</p>

<div class="pre-action-link" id="premain10" width="100%" style="display:block"><img id="preimg10" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="10" style="cursor: pointer;"><span id="precollapse10" preid="10" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="10">Copy Code</a></div><pre lang="cs" id="pre10" style="margin-top: 0px;"><span class="code-keyword">public</span> <span class="code-keyword">interface</span> ICustomerDataAccessLayer
{
    <span class="code-SummaryComment">///</span><span class="code-comment"> Return all the persistent customers
</span>    List&lt;CustomerDataObject&gt; GetCustomers();

    <span class="code-SummaryComment">///</span><span class="code-comment"> Updates or adds the given customer
</span>    <span class="code-keyword">void</span> UpdateCustomer(CustomerDataObject customer);

    <span class="code-SummaryComment">///</span><span class="code-comment"> Delete the given customer
</span>    <span class="code-keyword">void</span> DeleteCustomer(CustomerDataObject customer);
}
<span class="code-keyword">public</span> <span class="code-keyword">class</span> CustomerDataObject
{
    <span class="code-keyword">public</span> <span class="code-keyword">string</span> ID { <span class="code-keyword">get</span>; <span class="code-keyword">set</span>; }

    <span class="code-keyword">public</span> <span class="code-keyword">string</span> CompanyName { <span class="code-keyword">get</span>; <span class="code-keyword">set</span>; }

    <span class="code-keyword">public</span> <span class="code-keyword">string</span> ContactName { <span class="code-keyword">get</span>; <span class="code-keyword">set</span>; }
}</pre>

<p>As you can see, there are no UI framework specific interfaces or classes (such as <code>ObservableCollection</code>) exposed by the DAL. The problem here is how to bind the customers returned by <code>ICustomerDataAccess.GetCustomers</code> to our <code>DataGrid</code> and ensure that changes are synchronised with the database.</p>

<p>We could bind the <code>DataGrid</code> directly to our customer collection, <code>List&lt;CustomerDataObject&gt;</code>; however, we need to ensure that the <code>UpdateCustomer</code> and <code>DeleteCustomer</code> methods on our DAL interface are invoked at the appropriate points in time. One approach that we might take is to handle the events / commands exposed by the <code>DataGrid</code> in order to determine what action it has just performed or intends to perform on the bound customer collection. However, in doing so, we would be writing integration code that is specific to the <code>DataGrid</code>. What if we wanted to change the UI to present a <code>ListView</code> and a number of <code>TextBox</code>es (details view)? We would have to re-write this logic. Also, none of the <code>DataGrid</code> events quite fit what we want. There are "Ending" events, but no "Ended" events; therefore, the data visible to event handlers is not in its committed state. A better approach would be if we could adapt our collection of <code>Customer </code>objects in such a way that they could be bound to any suitable WPF UI control, with add/edit/remove operations synchronised with the database via our DAL.</p>

<h3><a id="delete" title="delete" name="delete">Handling Delete Operations</a></h3>

<p>The <code>ObservableCollection</code> class is a good candidate for our data binding needs. It exposes a <code>CollectionChanged</code> event which is fired whenever items are added or removed from the collection. If we copy our <code>customer </code>data into an <code>ObservableCollection</code> and bind this to the <code>DataGrid</code>, we can handle the <code>CollectionChanged</code> event and perform the required operation on the DAL. The following code snippet shows how the <code>CustomerObjectDataProvider</code> (which is defined as an <code>ObjectDataProvider</code> in the XAML) constructs an <code>ObservableCollection</code> of <code>CustomerUIObject</code>s. These UI objects simply wrap their data object counterparts in order to expose the same properties.</p>

<div class="pre-action-link" id="premain11" width="100%" style="display:block"><img id="preimg11" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="11" style="cursor: pointer;"><span id="precollapse11" preid="11" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="11">Copy Code</a></div><pre lang="cs" id="pre11" style="margin-top: 0px;"><span class="code-keyword">public</span> CustomerObjectDataProvider()
{
    dataAccessLayer = <span class="code-keyword">new</span> CustomerDataAccessLayer();
}

<span class="code-keyword">public</span> CustomerUIObjects GetCustomers()
{
    <span class="code-comment">//</span><span class="code-comment"> populate our list of customers from the data access layer
</span>    CustomerUIObjects customers = <span class="code-keyword">new</span> CustomerUIObjects();

    List&lt;CustomerDataObject&gt; customerDataObjects = dataAccessLayer.GetCustomers();
    <span class="code-keyword">foreach</span> (CustomerDataObject customerDataObject <span class="code-keyword">in</span> customerDataObjects)
    {
        <span class="code-comment">//</span><span class="code-comment"> create a business object from each data object
</span>        customers.Add(<span class="code-keyword">new</span> CustomerUIObject(customerDataObject));
    }

    customers.CollectionChanged += <span class="code-keyword">new</span>
      NotifyCollectionChangedEventHandler(CustomersCollectionChanged);

    <span class="code-keyword">return</span> customers;
}

<span class="code-keyword">void</span> CustomersCollectionChanged(<span class="code-keyword">object</span> sender, NotifyCollectionChangedEventArgs e)
{
    <span class="code-keyword">if</span> (e.Action == NotifyCollectionChangedAction.Remove)
    {
        <span class="code-keyword">foreach</span> (<span class="code-keyword">object</span> item <span class="code-keyword">in</span> e.OldItems)
        {
            CustomerUIObject customerObject = item <span class="code-keyword">as</span> CustomerUIObject;

            <span class="code-comment">//</span><span class="code-comment"> use the data access layer to delete the wrapped data object
</span>            dataAccessLayer.DeleteCustomer(customerObject.GetDataObject());
        }
    }
}</pre>

<p>When a user deletes a row with the <code>DataGrid</code> control, the <code>CollectionChanged</code> event is fired on the bound collection. In the event handler, we invoke the DAL <code>DeleteCustomer</code> method with the wrapped data object passed as the parameter.</p>

<p>Handling delete operations is relatively straightforward, but how about updates or insertions? You might think that the same approach can be used, the <code>NotifyCollectionChangedEventArgs.Action</code> property does include Add operations; however, this event is not fired when the items within the collection are updated. Furthermore, when a user adds a new item to the <code>DataGrid</code>, the object is initially added to the bound collection in a non-initialized state, so we would only ever see the object with its default property values. What we really need to do is determine when the user finishes editing an item in the grid.</p>

<h3><a id="layered_updates" title="layered_updates" name="layered_updates">Handling Updates / Inserts</a></h3>

<p>To determine when a user finishes editing a bound item, we need to delve a little deeper into the binding mechanism itself. The <code>DataGrid</code> is able to perform an atomic commit of the row which is currently being edited; this is made possible if the bound items implement the <code>IEditableObject</code> interface which exposes <code>BeginEdit</code>, <code>EndEdit</code>, and <code>CancelEdit</code> methods. Typically, an object implementing this interface would return to its state at the point when the <code>BeginEdit</code> method was called as a response to the <code>CancelEdit</code> method being invoked. However, in this instance, we are not really concerned about being able to cancel edits; all we really need to know is when the user has finished editing a row. This is indicted when the <code>DataGrid</code> invokes <code>EndEdit</code> on our bound item.</p>

<p>In order to notify the <code>CustomerDataObjectProvider</code> that <code>EndEdit</code> has been invoked on one of the objects in the bound collection, the <code>CustomerUIObject</code> implements <code>IEditableObject</code> as follows:</p>

<div class="pre-action-link" id="premain12" width="100%" style="display:block"><img id="preimg12" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="12" style="cursor: pointer;"><span id="precollapse12" preid="12" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="12">Copy Code</a></div><pre lang="cs" id="pre12" style="margin-top: 0px;"><span class="code-keyword">public</span> <span class="code-keyword">delegate</span> <span class="code-keyword">void</span> ItemEndEditEventHandler(IEditableObject sender);

<span class="code-keyword">public</span> <span class="code-keyword">event</span> ItemEndEditEventHandler ItemEndEdit;

<span class="code-preprocessor">#region</span> IEditableObject Members

<span class="code-keyword">public</span> <span class="code-keyword">void</span> BeginEdit() {}

<span class="code-keyword">public</span> <span class="code-keyword">void</span> CancelEdit() {}

<span class="code-keyword">public</span> <span class="code-keyword">void</span> EndEdit()
{
    <span class="code-keyword">if</span> (ItemEndEdit != <span class="code-keyword">null</span>)
    {
        ItemEndEdit(<span class="code-keyword">this</span>);
    }
}

<span class="code-preprocessor">#endregion</span></pre>

<p>When items are added to the <code>CustomerUIObjects</code> collection, this event is handled for all the items in the collection, with the handler simply forwarding the event:</p>

<div class="pre-action-link" id="premain13" width="100%" style="display:block"><img id="preimg13" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="13" style="cursor: pointer;"><span id="precollapse13" preid="13" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="13">Copy Code</a></div><pre lang="cs" id="pre13" style="margin-top: 0px;"><span class="code-keyword">public</span> <span class="code-keyword">class</span> CustomerUIObjects : ObservableCollection&lt;CustomerDataObject&gt;
{
    <span class="code-keyword">protected</span> <span class="code-keyword">override</span> <span class="code-keyword">void</span> InsertItem(<span class="code-keyword">int</span> index, CustomerUIObject item)
    {
        <span class="code-keyword">base</span>.InsertItem(index, item);

        <span class="code-comment">//</span><span class="code-comment"> handle any EndEdit events relating to this item
</span>        item.ItemEndEdit += <span class="code-keyword">new</span> ItemEndEditEventHandler(ItemEndEditHandler);
    }

    <span class="code-keyword">void</span> ItemEndEditHandler(IEditableObject sender)
    {
        <span class="code-comment">//</span><span class="code-comment"> simply forward any EndEdit events
</span>        <span class="code-keyword">if</span> (ItemEndEdit != <span class="code-keyword">null</span>)
        {
            ItemEndEdit(sender);
        }
    }

    <span class="code-keyword">public</span> <span class="code-keyword">event</span> ItemEndEditEventHandler ItemEndEdit;
}</pre>

<p>The <code>CustomerObjectDataProvider</code> can now handle this event to receive the notification of <code>CommitEdit</code> being invoked on any of the bound items. It can then invoke the DAL methods to synchronise the database state:</p>

<div class="pre-action-link" id="premain14" width="100%" style="display:block"><img id="preimg14" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="14" style="cursor: pointer;"><span id="precollapse14" preid="14" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="14">Copy Code</a></div><pre lang="cs" id="pre14" style="margin-top: 0px;"><span class="code-keyword">public</span> CustomerUIObjects GetCustomers()
{
    <span class="code-comment">//</span><span class="code-comment"> populate our list of customers from the data access layer
</span>    CustomerUIObjects customers = <span class="code-keyword">new</span> CustomerUIObjects();

    List&lt;CustomerDataObject&gt; customerDataObjects = dataAccessLayer.GetCustomers();
    <span class="code-keyword">foreach</span> (CustomerDataObject customerDataObject <span class="code-keyword">in</span> customerDataObjects)
    {
        <span class="code-comment">//</span><span class="code-comment"> create a business object from each data object
</span>        customers.Add(<span class="code-keyword">new</span> CustomerUIObject(customerDataObject));
    }

    customers.ItemEndEdit += <span class="code-keyword">new</span> ItemEndEditEventHandler(CustomersItemEndEdit);
    customers.CollectionChanged += <span class="code-keyword">new</span>
      NotifyCollectionChangedEventHandler(CustomersCollectionChanged);

    <span class="code-keyword">return</span> customers;
}

<span class="code-keyword">void</span> CustomersItemEndEdit(IEditableObject sender)
{
    CustomerUIObject customerObject = sender <span class="code-keyword">as</span> CustomerUIObject;

    <span class="code-comment">//</span><span class="code-comment"> use the data access layer to update the wrapped data object
</span>    dataAccessLayer.UpdateCustomer(customerObject.GetDataObject());
}</pre>

<p>The above code will handle both insert and update operations.</p>

<p>In conclusion, this method adapts the data items and collection provided by the DAL into UI items and collections which are more appropriate for data binding within the WPF Framework. All database synchronisation logic is performed by handling event from this bound collection; therefore, there is no WPF <code>DataGrid</code> specific code.</p>

<p>One final note: the above example does not include error handling. For example, foreign key constraint violations will result in the bound <code>CustomerUIObjects</code> collection no longer being synchronised with the database. Unfortunately, the WPF <code>DataGrid</code> v1 has a bug whereby it does <a href="http://www.codeplex.com/wpf/Thread/View.aspx?ThreadId=39077">not catch exceptions when <code>IEditableObject.EndEdit</code> is invoked</a>, leaving no obvious way of cancelling the edit operation. If anyone has a good workaround, please let me know!</p>

<h2><a id="validation" title="validation" name="validation">Validation</a></h2>

<p>Validation within the WPF <code>DataGrid</code> occurs both at the cell level and at the row level. Cell level validation makes use of the standard Binding validation mechanisms which are described in great detail in this excellent <a href="http://www.codeproject.com/KB/WPF/wpfvalidation.aspx">CodeProject article</a>. Row level validation makes use of the new .NET SP1 feature, <code>BindingGroup</code>s. A binding group does pretty much what you would expect, it groups together a number of bindings, allowing them to be validated as a single entity. The advantage of this approach is that it allows validation of more complex rules, such as "start date must come before end date", on your data objects, something which is not possible when validating the bindings for each individual property. A detailed overview of binding groups can be found on <a href="http://blogs.msdn.com/vinsibal/archive/2008/08/11/wpf-3-5-sp1-feature-bindinggroups-with-item-level-validation.aspx">Vincent Sibal's blog</a>, and their usefulness extends far beyond that of validating <code>DataGrid</code> rows.</p>

<p>However, it should be noted that the validation support for the WPF <code>DataGrid</code> is currently a bit patchy. The row level validation which was advertised as part of the first <code>DataGrid</code> CTP didn't quite make the release, and the recently released <code>DataGrid</code> v1 still has a number of <a href="http://www.codeplex.com/wpf/Wiki/View.aspx?title=Validation&referringTitle=Tips%20%26%20Tricks">validation related issues</a>.</p>

<p>This article will present a few common validation scenarios, demonstrating how the <code>DataGrid</code> can be configured to perform these tasks. Note that the examples I give all delegate the validation logic to the bound object itself, rather than having the rules which dictate whether an object state is valid or not live entirely within the UI. Both are, of course, possible; however, it is my preference that the validation logic should not live in the presentation layer.</p>

<h3><a id="exception" title="exception" name="exception">Validation on Exceptions</a></h3>

<p>A common approach to validation is to have your object's property setters throw an exception if the passed value is not valid for whatever reason. The WPF Framework includes a validation rule, <code>ExceptionValidationRule</code>, for this very purpose. It simply catches any exception thrown when the bound property is set, and extracts the exception message. The .NET 3.5 SP1 framework provides a useful shorthand for utilizing this rule. The following XAML snippet shows two equivalent bindings, with the second making use of the <code>ValidatesOnException</code> property on the <code>Binding</code> class which simply adds the appropriate <code>ExceptionValidationRule</code> instance to the <code>ValidationRules</code> collection:</p>

<div class="pre-action-link" id="premain15" width="100%" style="display:block"><img id="preimg15" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="15" style="cursor: pointer;"><span id="precollapse15" preid="15" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="15">Copy Code</a></div><pre lang="xml" id="pre15" style="margin-top: 0px;"><span class="code-keyword">&lt;!--</span><span class="code-keyword"><span class="code-comment"> explicit addition of ExceptionValidationRule </span>--&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-leadattribute">TextBox</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">TextBox.Text</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Binding</span> <span class="code-attribute">Path</span><span class="code-keyword">="</span><span class="code-keyword">Name"</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">Binding.ValidationRules</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">ExceptionValidationRule</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Binding.ValidationRules</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Binding</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">TextBox.Text</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">TextBox</span><span class="code-keyword">&gt;</span>

<span class="code-keyword">&lt;!--</span><span class="code-keyword"><span class="code-comment"> implicit addition of ExceptionValidationRule </span>--&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-leadattribute">TextBox</span> <span class="code-attribute">Text</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=Name, ValidatesOnExceptions=True}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span></pre>

<p>To demonstrate how a <code>DataGrid</code> can catch validation exceptions, this example will utilise a simple data object:</p>

<div class="pre-action-link" id="premain16" width="100%" style="display:block"><img id="preimg16" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="16" style="cursor: pointer;"><span id="precollapse16" preid="16" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="16">Copy Code</a></div><pre lang="cs" id="pre16" style="margin-top: 0px;"><span class="code-keyword">public</span> <span class="code-keyword">class</span> Person
{
    <span class="code-keyword">private</span> <span class="code-keyword">readonly</span> Regex nameEx = <span class="code-keyword">new</span> Regex(<span class="code-string">@"</span><span class="code-string">^[A-Za-z ]+$"</span>);

    <span class="code-keyword">private</span> <span class="code-keyword">string</span> name;

    <span class="code-keyword">public</span> <span class="code-keyword">string</span> Name
    {
        <span class="code-keyword">get</span> { <span class="code-keyword">return</span> name; }
        <span class="code-keyword">set</span>
        {
            <span class="code-keyword">if</span> (value == <span class="code-keyword">null</span>)
                <span class="code-keyword">throw</span> <span class="code-keyword">new</span> ArgumentException(<span class="code-string">"</span><span class="code-string">Name cannot be null"</span>);

            <span class="code-keyword">if</span> (!nameEx.Match(value).Success)
                <span class="code-keyword">throw</span> <span class="code-keyword">new</span> ArgumentException(<span class="code-string">"</span><span class="code-string">Name may only "</span> +
                          <span class="code-string">"</span><span class="code-string">contain characters or spaces"</span>);

            name = value;
        }
    }

    <span class="code-keyword">private</span> <span class="code-keyword">int</span> age;

    <span class="code-keyword">public</span> <span class="code-keyword">int</span> Age
    {
        <span class="code-keyword">get</span> { <span class="code-keyword">return</span> age; }
        <span class="code-keyword">set</span>
        {
            <span class="code-keyword">if</span> (value &lt; <span class="code-digit">0</span> || value &gt; <span class="code-digit">110</span>)
                <span class="code-keyword">throw</span> <span class="code-keyword">new</span> ArgumentException(<span class="code-string">"</span><span class="code-string">Age must be positive "</span> +
                                            <span class="code-string">"</span><span class="code-string">and less than 110"</span>);

            age = value;
        }
    }
}</pre>

<p>If we simply enable validation for a <code>DataGrid</code> which is bound to a collection of the above data type with <code>ValidatesOnException</code> enabled, we can see that validation is being applied because any cell that contains a validation error is indicated with a red outline:</p>
<img height="145" alt="validationone.png" src="./WPF DataGrid Practical Examples - CodeProject_files/validationone.png" width="231"> 
<p>However, there is no feedback to the user regarding the nature of the error, and there is no indicator on the row to alert the user.</p>

<p>Often, validation failures are displayed as a tooltip relating to the data input control, as follows (see the aforementioned <a href="http://www.codeproject.com/KB/WPF/wpfvalidation.aspx">CodeProject article</a> for further details and examples):</p>

<div class="pre-action-link" id="premain17" width="100%" style="display:block"><img id="preimg17" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="17" style="cursor: pointer;"><span id="precollapse17" preid="17" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="17">Copy Code</a></div><pre lang="xml" id="pre17" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">Style</span> <span class="code-attribute">TargetType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type TextBox}"</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Style.Triggers</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Trigger</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Validation.HasError"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">true"</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">ToolTip"</span>
              <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Trigger</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Style.Triggers</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Style</span><span class="code-keyword">&gt;</span></pre>

<p>However, implicit styles do not work for elements generated by <code>DataGrid</code> columns. Instead, styles can be applied to <code>DataGrid</code> cells via the <code>ElementStyle</code> and <code>EditingElementStyle</code> properties. However, there is one final twist: the code for <code>DataGridTextColumn</code> programmatically applies a few styles to the <code>TextBox</code> which it generates when the cell is in edit mode. We have to replicates these styles, namely zero padding and border thickness, in our applied style.</p>

<p>The XAML to display this data object within a <code>DataGrid</code> that reports validation errors is given below:</p>

<div class="pre-action-link" id="premain18" width="100%" style="display:block"><img id="preimg18" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="18" style="cursor: pointer;"><span id="precollapse18" preid="18" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="18">Copy Code</a></div><pre lang="xml" id="pre18" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">Window</span> <span class="code-attribute">...</span> <span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Window.Resources</span><span class="code-keyword">&gt;</span>

        <span class="code-comment">&lt;!--</span><span class="code-keyword"><span class="code-comment"> the data source for this Window </span>--&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">ObjectDataProvider</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">PersonDataSource"</span>
          <span class="code-attribute">ObjectType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type local:PersonDataSource}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">ObjectDataProvider</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">People"</span>
          <span class="code-attribute">ObjectInstance</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource PersonDataSource}"</span>
          <span class="code-attribute">MethodName</span><span class="code-keyword">="</span><span class="code-keyword">GetPeople"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>

        <span class="code-comment">&lt;!--</span><span class="code-keyword"><span class="code-comment"> style to apply to DataGridTextColumn in edit mode  </span>--&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Style</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">CellEditStyle"</span> <span class="code-attribute">TargetType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type TextBox}"</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">BorderThickness"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">0"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Padding"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">0"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">Style.Triggers</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">Trigger</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Validation.HasError"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">true"</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">ToolTip"</span>
                            <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">{Binding RelativeSource={RelativeSource Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Trigger</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Style.Triggers</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Style</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Window.Resources</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">DockPanel</span> <span class="code-attribute">DataContext</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Source={StaticResource People}}"</span><span class="code-keyword">&gt;</span>

        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid</span> <span class="code-attribute">Name</span><span class="code-keyword">="</span><span class="code-keyword">dataGrid"</span> <span class="code-attribute">AutoGenerateColumns</span><span class="code-keyword">="</span><span class="code-keyword">False"</span>
                     <span class="code-attribute">ItemsSource</span><span class="code-keyword">="</span><span class="code-keyword">{Binding}"</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Name"</span>
                   <span class="code-attribute">EditingElementStyle</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource CellEditStyle}"</span>
                   <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=Name, ValidatesOnExceptions=True}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Age"</span>
                   <span class="code-attribute">EditingElementStyle</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource CellEditStyle}"</span>
                   <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=Age, ValidatesOnExceptions=True}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">DockPanel</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Window</span><span class="code-keyword">&gt;</span></pre>

<p>Which gives the following result:</p>
<img height="126" alt="validationtwo.png" src="./WPF DataGrid Practical Examples - CodeProject_files/validationtwo.png" width="307"> 
<p>A common interface feature of the <code>DataGrid</code> is the presence of an indicator which alerts the user to an error on a particular row. The WPF <code>DataGrid</code> has this feature; however, it is only displayed if the <code>Validation.HasError</code> attached property is <code lang="cs">true</code> for the row. In order to enable this, we add a dummy validation rule to the grid as follows:</p>

<div class="pre-action-link" id="premain19" width="100%" style="display:block"><img id="preimg19" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="19" style="cursor: pointer;"><span id="precollapse19" preid="19" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="19">Copy Code</a></div><pre lang="xml" id="pre19" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid</span> <span class="code-attribute">Name</span><span class="code-keyword">="</span><span class="code-keyword">dataGrid"</span> <span class="code-attribute">AutoGenerateColumns</span><span class="code-keyword">="</span><span class="code-keyword">False"</span> <span class="code-attribute">ItemsSource</span><span class="code-keyword">="</span><span class="code-keyword">{Binding}"</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid.RowValidationRules</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">local:RowDummyValidation</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid.RowValidationRules</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Name"</span>
           <span class="code-attribute">EditingElementStyle</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource CellEditStyle}"</span>
           <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=Name, ValidatesOnExceptions=True}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Age"</span>
           <span class="code-attribute">EditingElementStyle</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource CellEditStyle}"</span>
           <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=Age, ValidatesOnExceptions=True}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>

<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid</span><span class="code-keyword">&gt;</span></pre>

<p>This validation rule simply returns <code>ValidationResult.ValidResult</code> regardless of the input value. The net result being that the validation error indicator is now displayed against the row, as illustrated below:</p>
<img height="133" alt="validationthree.png" src="./WPF DataGrid Practical Examples - CodeProject_files/validationthree.png" width="319"> 
<h3><a id="errorinfo" title="errorinfo" name="errorinfo">Validation with IDataErrorInfo</a></h3>

<p>A popular alternative to the previous example, where exceptions are thrown on the property setters of the data objects, is the use of the <code>IDataErrorInfo</code> interface. Objects that implement this interface are validated on demand, rather than each time their state changes. For a discussion of how this can make your business objects more useable, the article <a href="http://karlshifflett.wordpress.com/2008/04/20/fort-knox-business-objects-yes-no/">Fort Knox Business Objects</a> makes interesting reading. They also have the advantage that they are able to validate state which depends on multiple properties; there is clearly a synergy here with <code>BindingGroup</code>s. The following example is a business object that shares similar constraints to the previous <code>Person</code> object; however, this object has a further rule that <code>StartDate</code> must be before <code>EndDate</code>.</p>

<div class="pre-action-link" id="premain20" width="100%" style="display:block"><img id="preimg20" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="20" style="cursor: pointer;"><span id="precollapse20" preid="20" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="20">Copy Code</a></div><pre lang="cs" id="pre20" style="margin-top: 0px;"><span class="code-keyword">public</span> <span class="code-keyword">class</span> Appointment : IDataErrorInfo
{
    <span class="code-keyword">private</span> <span class="code-keyword">readonly</span> Regex nameEx = <span class="code-keyword">new</span> Regex(<span class="code-string">@"</span><span class="code-string">^[A-Za-z ]+$"</span>);

    <span class="code-keyword">public</span> <span class="code-keyword">string</span> Name { <span class="code-keyword">get</span>; <span class="code-keyword">set</span>; }

    <span class="code-keyword">public</span> <span class="code-keyword">int</span> Age { <span class="code-keyword">get</span>; <span class="code-keyword">set</span>; }

    <span class="code-keyword">public</span> DateTime StartTime { <span class="code-keyword">get</span>; <span class="code-keyword">set</span>; }

    <span class="code-keyword">public</span> DateTime EndTime { <span class="code-keyword">get</span>; <span class="code-keyword">set</span>; }

    <span class="code-preprocessor">#region</span> IDataErrorInfo Members

    <span class="code-keyword">public</span> <span class="code-keyword">string</span> Error
    {
        <span class="code-keyword">get</span>
        {
            StringBuilder error = <span class="code-keyword">new</span> StringBuilder();

            <span class="code-comment">//</span><span class="code-comment"> iterate over all of the properties
</span>            <span class="code-comment">//</span><span class="code-comment"> of this object - aggregating any validation errors
</span>            PropertyDescriptorCollection props = TypeDescriptor.GetProperties(<span class="code-keyword">this</span>);
            <span class="code-keyword">foreach</span> (PropertyDescriptor prop <span class="code-keyword">in</span> props)
            {
                <span class="code-keyword">string</span> propertyError = <span class="code-keyword">this</span>[prop.Name];
                <span class="code-keyword">if</span> (propertyError != <span class="code-keyword">string</span>.Empty)
                {
                    error.Append((error.Length!=0  ? <span class="code-string">"</span><span class="code-string">, "</span> : <span class="code-string">"</span><span class="code-string">"</span>) + propertyError);
                }
            }

            <span class="code-comment">//</span><span class="code-comment"> apply object level validation rules
</span>            <span class="code-keyword">if</span> (StartTime.CompareTo(EndTime) &gt; <span class="code-digit">0</span>)
            {
                error.Append((error.Length != <span class="code-digit">0</span> ? <span class="code-string">"</span><span class="code-string">, "</span> : <span class="code-string">"</span><span class="code-string">"</span>) +
                              <span class="code-string">"</span><span class="code-string">EndTime must be after StartTime"</span>);
            }

            <span class="code-keyword">return</span> error.ToString();
        }
    }

    <span class="code-keyword">public</span> <span class="code-keyword">string</span> <span class="code-keyword">this</span>[<span class="code-keyword">string</span> columnName]
    {
        <span class="code-keyword">get</span>
        {
            <span class="code-comment">//</span><span class="code-comment"> apply property level validation rules
</span>            <span class="code-keyword">if</span> (columnName == <span class="code-string">"</span><span class="code-string">Name"</span>)
            {
                <span class="code-keyword">if</span> (Name == <span class="code-keyword">null</span> || Name == <span class="code-keyword">string</span>.Empty)
                   <span class="code-keyword">return</span> <span class="code-string">"</span><span class="code-string">Name cannot be null or empty"</span>;

                <span class="code-keyword">if</span> (!nameEx.Match(Name).Success)
                    <span class="code-keyword">return</span> <span class="code-string">"</span><span class="code-string">Name may only contain characters or spaces"</span>;
            }

            <span class="code-keyword">if</span> (columnName == <span class="code-string">"</span><span class="code-string">Age"</span>)
            {
                <span class="code-keyword">if</span> (Age &lt; <span class="code-digit">0</span> || Age &gt; <span class="code-digit">110</span>)
                    <span class="code-keyword">return</span> <span class="code-string">"</span><span class="code-string">Age must be positive and less than 110"</span>;
            }

            <span class="code-keyword">return</span> <span class="code-string">"</span><span class="code-string">"</span>;
        }
    }

    <span class="code-preprocessor">#endregion</span>
}</pre>

<p>These objects are bound to a grid with the following XAML:</p>

<div class="pre-action-link" id="premain21" width="100%" style="display:block"><img id="preimg21" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="21" style="cursor: pointer;"><span id="precollapse21" preid="21" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="21">Copy Code</a></div><pre lang="xml" id="pre21" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid</span>  <span class="code-attribute">Name</span><span class="code-keyword">="</span><span class="code-keyword">dataGrid"</span> <span class="code-attribute">AutoGenerateColumns</span><span class="code-keyword">="</span><span class="code-keyword">False"</span>
              <span class="code-attribute">RowStyle</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource RowStyle}"</span> <span class="code-attribute">ItemsSource</span><span class="code-keyword">="</span><span class="code-keyword">{Binding}"</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid.RowValidationRules</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">local:RowDataInfoValidationRule</span> <span class="code-attribute">ValidationStep</span><span class="code-keyword">="</span><span class="code-keyword">UpdatedValue"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid.RowValidationRules</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Name"</span> <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=Name}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Age"</span> <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=Age}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Start"</span> <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=StartTime}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">End"</span> <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=EndTime}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>

<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid</span><span class="code-keyword">&gt;</span></pre>

<p>The row validation rule in the above example is given below:</p>

<div class="pre-action-link" id="premain22" width="100%" style="display:block"><img id="preimg22" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="22" style="cursor: pointer;"><span id="precollapse22" preid="22" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="22">Copy Code</a></div><pre lang="cs" id="pre22" style="margin-top: 0px;"><span class="code-keyword">public</span> <span class="code-keyword">class</span> RowDataInfoValidationRule : ValidationRule
{
    <span class="code-keyword">public</span> <span class="code-keyword">override</span> ValidationResult Validate(<span class="code-keyword">object</span> value,
                    CultureInfo cultureInfo)
    {
        BindingGroup group = (BindingGroup)value;

        StringBuilder error = <span class="code-keyword">null</span>;
        <span class="code-keyword">foreach</span> (<span class="code-keyword">var</span> item <span class="code-keyword">in</span> group.Items)
        {
            <span class="code-comment">//</span><span class="code-comment"> aggregate errors
</span>            IDataErrorInfo info = item <span class="code-keyword">as</span> IDataErrorInfo;
            <span class="code-keyword">if</span> (info != <span class="code-keyword">null</span>)
            {
                <span class="code-keyword">if</span> (!string.IsNullOrEmpty(info.Error))
                {
                    <span class="code-keyword">if</span> (error == <span class="code-keyword">null</span>)
                        error = <span class="code-keyword">new</span> StringBuilder();
                    error.Append((error.Length != <span class="code-digit">0</span> ? <span class="code-string">"</span><span class="code-string">, "</span> : <span class="code-string">"</span><span class="code-string">"</span>) + info.Error);
                }
            }
        }

        <span class="code-keyword">if</span> (error != <span class="code-keyword">null</span>)
            <span class="code-keyword">return</span> <span class="code-keyword">new</span> ValidationResult(<span class="code-keyword">false</span>, error.ToString());

        <span class="code-keyword">return</span> ValidationResult.ValidResult;
    }
}</pre>

<p>This rule iterates over all of the items within the binding group (i.e., the <code>DataGrid</code> row) probing them for errors. In this case, the <code>IDataErrorInfo.Error</code> property is used for object level validation.</p>

<p>The image below shows the use of <code>IDataErrorInfo</code> in action:</p>
<img height="186" alt="validationdatainfo.png" src="./WPF DataGrid Practical Examples - CodeProject_files/validationdatainfo.png" width="418"> 
<p>Note also that because the validation error does not relate to an individual property of our business object, none of the <code>DataGrid</code> cells are highlighted. In order to make the failure more obvious, the style of the row has been modified to add a red border.</p>

<div class="pre-action-link" id="premain23" width="100%" style="display:block"><img id="preimg23" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="23" style="cursor: pointer;"><span id="precollapse23" preid="23" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="23">Copy Code</a></div><pre lang="xml" id="pre23" style="margin-top: 0px;"><span class="code-keyword">&lt;!--</span><span class="code-keyword"><span class="code-comment"> Row Style</span>--&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-leadattribute">Style</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">RowStyle"</span> <span class="code-attribute">TargetType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type dg:DataGridRow}"</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Style.Triggers</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Trigger</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Validation.HasError"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">true"</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">BorderThickness"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">1"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">BorderBrush"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">Red"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">ToolTip"</span>
              <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">{Binding RelativeSource={RelativeSource Self},
                     Path=(Validation.Errors)[0].ErrorContent}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Trigger</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Style.Triggers</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Style</span><span class="code-keyword">&gt;</span></pre>

<p>The WPF Framework also has a stock validation rule for use with objects that implement <code>IDataErrorInfo</code>. This can be automatically added to the validation rules for a binding via the <code>ValidatesOnDataError</code> property. This works fine when editing an existing row; however, when a new row is added, for some reason, validation is applied to the newly created object, and re-validation attempts fail to remove the error. I delved into the implementation of <code>BindingExpression</code>, but got rather lost along the way! A simple solution is to implement a validation rule which uses the <code>IDataErrorInfo</code> interface, but simply probes for the error of the bound property, as follows:</p>

<div class="pre-action-link" id="premain24" width="100%" style="display:block"><img id="preimg24" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="24" style="cursor: pointer;"><span id="precollapse24" preid="24" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="24">Copy Code</a></div><pre lang="cs" id="pre24" style="margin-top: 0px;"><span class="code-keyword">public</span> <span class="code-keyword">class</span> CellDataInfoValidationRule : ValidationRule
{
    <span class="code-keyword">public</span> <span class="code-keyword">override</span> ValidationResult Validate(<span class="code-keyword">object</span> value,
                                     CultureInfo cultureInfo)
    {
        <span class="code-comment">//</span><span class="code-comment"> obtain the bound business object
</span>        BindingExpression expression = value <span class="code-keyword">as</span> BindingExpression;
        IDataErrorInfo info = expression.DataItem <span class="code-keyword">as</span> IDataErrorInfo;

        <span class="code-comment">//</span><span class="code-comment"> determine the binding path
</span>        <span class="code-keyword">string</span> boundProperty = expression.ParentBinding.Path.Path;

        <span class="code-comment">//</span><span class="code-comment"> obtain any errors relating to this bound property
</span>        <span class="code-keyword">string</span> error = info[boundProperty];
        <span class="code-keyword">if</span> (!string.IsNullOrEmpty(error))
        {
            <span class="code-keyword">return</span> <span class="code-keyword">new</span> ValidationResult(<span class="code-keyword">false</span>, error);
        }

        <span class="code-keyword">return</span> ValidationResult.ValidResult;
    }
}</pre>

<p>With the above rule associated with our column bindings, you can now give feedback regarding which cell has a validation error (in the case where the validation error relates to an individual object property):</p>
<img height="168" alt="validationdatainfotwo.png" src="./WPF DataGrid Practical Examples - CodeProject_files/validationdatainfotwo.png" width="428"> 
<h3><a id="valid_dataset" title="valid_dataset" name="valid_dataset">Validation with Bound DataSets</a></h3>

<p>The WPF <code>DataGrid</code> is able to perform an atomic commit of the contents of an individual row, or alternatively, dispose of any changes made if the user hits the Escape key. This functionality is made possible when the bound objects implement the <code>IEditableObject</code> interface. When a <code>DataTable</code> is bound to the <code>DataGrid</code>, the view associated with the table is bound. This exposes the rows via the <code>DataRowView</code> wrapper class which implements this interface. To have this behaviour in your own business objects, you have to implement <code>IEditableObject</code> yourself; however, there are a few simple patterns that can be applied; see, for example, <a href="http://blogs.infragistics.com/blogs/joshs/archive/2008/05/08/creating-objects-that-support-edit-cancellation-via-ieditableobject.aspx">this method</a> which uses an object state snapshot.</p>

<p>When a new row or changes to an existing row is committed to a <code>DataTable</code>, constraints are checked (e.g., nullable columns, unique constraints) and an exception thrown if they are violated. It would make sense to catch these exceptions and display the problem as a validation error to the <code>DataGrid</code> user. Unfortunately, the WPF <code>DataGrid</code> v1 has a bug whereby it <a href="http://www.codeplex.com/wpf/Thread/View.aspx?ThreadId=39077">does not catch exceptions when <code>IEditableObject.EndEdit</code> is invoked</a>.</p>

<p>The workaround given here uses validation to ensure that all the <code>DataTable</code> constraints are satisfied before the updates are committed. The following slightly lengthy validation rule can be applied at cell and row level. The rule will check a column (or all the row's columns) for length, unique, and null constraints.</p>

<div class="pre-action-link" id="premain25" width="100%" style="display:block"><img id="preimg25" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="25" style="cursor: pointer;"><span id="precollapse25" preid="25" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="25">Copy Code</a></div><pre lang="cs" id="pre25" style="margin-top: 0px;"><span class="code-keyword">public</span> <span class="code-keyword">class</span> DataRowValidation : ValidationRule
{
    <span class="code-keyword">public</span> <span class="code-keyword">override</span> ValidationResult Validate(<span class="code-keyword">object</span> value,
                                     CultureInfo cultureInfo)
    {
        <span class="code-comment">//</span><span class="code-comment"> if this rule is being applied to a cell we
</span>        <span class="code-comment">//</span><span class="code-comment"> will be inspecting a binding expression
</span>        <span class="code-keyword">if</span> (value <span class="code-keyword">is</span> BindingExpression)
        {
            <span class="code-comment">//</span><span class="code-comment"> obtain the row which is being validated
</span>            BindingExpression expression = value <span class="code-keyword">as</span> BindingExpression;
            DataRow row = ((DataRowView)expression.DataItem).Row;

            <span class="code-comment">//</span><span class="code-comment"> determine the column to validate
</span>            <span class="code-keyword">string</span> propertyName = expression.ParentBinding.Path.Path;

            <span class="code-keyword">return</span> ValidateColumn(propertyName, row);
        }

        <span class="code-comment">//</span><span class="code-comment"> if this rule is being applied to a cell
</span>        <span class="code-comment">//</span><span class="code-comment"> we will be inspecting a binding group
</span>        <span class="code-keyword">else</span> <span class="code-keyword">if</span> (value <span class="code-keyword">is</span> BindingGroup)
        {
            BindingGroup group = (BindingGroup)value;

            <span class="code-comment">//</span><span class="code-comment"> iterate over all the bound items (this should always be one!)
</span>            <span class="code-keyword">foreach</span> (<span class="code-keyword">var</span> item <span class="code-keyword">in</span> group.Items)
            {
                DataRow row = ((DataRowView)item).Row;

                <span class="code-comment">//</span><span class="code-comment"> validate against the metadata for each column
</span>                <span class="code-keyword">foreach</span> (DataColumn column <span class="code-keyword">in</span> row.Table.Columns)
                {
                    ValidationResult result = ValidateColumn(column.ColumnName, row);
                    <span class="code-keyword">if</span> (result != ValidationResult.ValidResult)
                    {
                        <span class="code-keyword">return</span> result;
                    }
                }
            }
        }

        <span class="code-keyword">return</span> ValidationResult.ValidResult;
    }

    <span class="code-SummaryComment">///</span><span class="code-comment"> <span class="code-SummaryComment">&lt;</span><span class="code-SummaryComment">summary</span><span class="code-SummaryComment">&gt;</span>
</span>    <span class="code-SummaryComment">///</span><span class="code-comment"> Validates a DataRow value associated with the given named column
</span>    <span class="code-SummaryComment">///</span><span class="code-comment"> <span class="code-SummaryComment">&lt;</span><span class="code-SummaryComment">/</span><span class="code-SummaryComment">summary</span><span class="code-SummaryComment">&gt;</span>
</span>    <span class="code-keyword">private</span> ValidationResult ValidateColumn(<span class="code-keyword">string</span> columnName, DataRow row)
    {
        DataTable table = row.Table;
        DataColumn column = table.Columns[columnName];
        <span class="code-keyword">object</span> cellValue = row[column.ColumnName];

        <span class="code-comment">//</span><span class="code-comment"> check for null values
</span>        <span class="code-keyword">if</span> (cellValue == <span class="code-keyword">null</span> || cellValue.Equals(<span class="code-keyword">string</span>.Empty) ||
            cellValue.Equals(System.DBNull.Value))
        {
            <span class="code-keyword">if</span> (!column.AllowDBNull)
            {
                <span class="code-keyword">return</span> <span class="code-keyword">new</span> ValidationResult(<span class="code-keyword">false</span>,
                       column.ColumnName + <span class="code-string">"</span><span class="code-string"> cannot be null"</span>);
            }
            <span class="code-keyword">else</span>
            {
                <span class="code-keyword">return</span> ValidationResult.ValidResult;
            }
        }

        <span class="code-comment">//</span><span class="code-comment"> check string length constraints
</span>        <span class="code-keyword">if</span> (column.DataType == <span class="code-keyword">typeof</span>(<span class="code-keyword">string</span>))
        {
            <span class="code-keyword">string</span> strVal = cellValue <span class="code-keyword">as</span> <span class="code-keyword">string</span>;
            <span class="code-keyword">if</span> (strVal != <span class="code-keyword">null</span> &amp;&amp; strVal.Length &gt; column.MaxLength)
            {
                <span class="code-keyword">return</span> <span class="code-keyword">new</span> ValidationResult(<span class="code-keyword">false</span>, <span class="code-string">"</span><span class="code-string">Length of "</span> + column.ColumnName +
                                            <span class="code-string">"</span><span class="code-string"> should not exceed "</span> + column.MaxLength);
            }
        }

        <span class="code-comment">//</span><span class="code-comment"> check for unique constraints
</span>        <span class="code-keyword">if</span> (column.Unique)
        {
            <span class="code-comment">//</span><span class="code-comment"> iterate over all the rows in the table
</span>            <span class="code-comment">//</span><span class="code-comment"> comparing the value for this column
</span>            <span class="code-keyword">foreach</span> (DataRow compareRow <span class="code-keyword">in</span> row.Table.Rows)
            {
                <span class="code-keyword">if</span> (compareRow!=row &amp;&amp; cellValue.Equals(compareRow[column]))
                {
                    <span class="code-keyword">return</span> <span class="code-keyword">new</span> ValidationResult(<span class="code-keyword">false</span>, column.ColumnName +
                                                <span class="code-string">"</span><span class="code-string"> must be unique"</span>);
                }
            }
        }

        <span class="code-keyword">return</span> ValidationResult.ValidResult;
    }
}</pre>

<p>The example in the attached source code presents a UI for editing the <code>Customer </code>table. One other subtlety of this example is that the primary key is read only, because the generated <code>DataSet</code>'s update methods assume that the primary key has not been modified. However, when the data grid selection changes to the empty row at the bottom, the column's read-only state is toggled to allow the user to add a new Customer row.</p>

<p>It should be noted that the validation method detailed above is quite inefficient. Also, it has only been tested on a rather small set of column types. However, the approach could be extended further. Hopefully, in the .NET 4.0 release of the <code>DataGrid</code>, this issue will be fixed!</p>

<h2><a id="styling" title="styling" name="styling">Styling</a></h2>

<p>The WPF <code>DataGrid</code> can be styled in a highly flexible manner by applying Styles or Templates in the same way as for all of the other WPF controls. Many of the grid's properties such as <code>CellStyle</code> and <code>RowStyle</code> are quite obvious. Rather than exhaustively cover all the various styling properties, this section will cover some of the <code>DataGrid</code> specific features, and also how to style some of the more tricky parts of the grid.</p>

<h3><a id="templates" title="templates" name="templates">Column Templates</a></h3>

<p>The WPF <code>DataGrid</code> has columns of type <code>Text</code>, <code>Hyperlink</code>, <code>CheckBox</code>, and <code>ComboBox</code>. If these column types do not fulfill your needs, either in read-only mode or when the cells are in edit mode, then you can define your own column type using templates. Users of the ASP.NET <code>GridView</code> will find this approach very familiar; you simply define a <code>DataTemplate</code> for rendering your data in read-only or edit mode.</p>

<p>The following example uses the <code>DatePicker</code> control, which is also part of the WPF Toolkit, to provide a more intuitive interface for selecting a date:</p>

<div class="pre-action-link" id="premain26" width="100%" style="display:block"><img id="preimg26" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="26" style="cursor: pointer;"><span id="precollapse26" preid="26" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="26">Copy Code</a></div><pre lang="xml" id="pre26" style="margin-top: 0px;"><span class="code-keyword">&lt;!--</span><span class="code-keyword"><span class="code-comment"> defines a custom column </span>--&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTemplateColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Date Of Birth"</span> <span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;!--</span><span class="code-keyword"><span class="code-comment"> editing template </span>--&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTemplateColumn.CellEditingTemplate</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">DataTemplate</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DatePicker</span>
               <span class="code-attribute">SelectedDate</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Path=DateOfBirth, Mode=TwoWay}"</span>
               <span class="code-attribute">BorderThickness</span><span class="code-keyword">="</span><span class="code-keyword">0"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">DataTemplate</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGridTemplateColumn.CellEditingTemplate</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;!--</span><span class="code-keyword"><span class="code-comment"> standard template </span>--&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTemplateColumn.CellTemplate</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">DataTemplate</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">TextBlock</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">TextBlock.Text</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Binding</span> <span class="code-attribute">Path</span><span class="code-keyword">="</span><span class="code-keyword">DateOfBirth"</span>
                       <span class="code-attribute">ConverterCulture</span><span class="code-keyword">="</span><span class="code-keyword">en-GB"</span>
                       <span class="code-attribute">StringFormat</span><span class="code-keyword">="</span><span class="code-keyword">{}{0:d}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">TextBlock.Text</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">TextBlock</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">DataTemplate</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGridTemplateColumn.CellTemplate</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGridTemplateColumn</span><span class="code-keyword">&gt;</span></pre>

<p>An example is given below:</p>
<img height="264" alt="customcell.png" src="./WPF DataGrid Practical Examples - CodeProject_files/customcell.png" width="385"> 
<p>Note also that the read-only view of this cell uses the <code>StringFormat</code> property of the <code>Binding</code> class to specify a format which matches that which is used by the <code>DatePicker</code>. Interestingly, the <code>DatePicker</code> picks up the current culture, whereas the <code>TextBlock</code> binding does not (yes, I live in the UK!).</p>

<h3><a id="indicator" title="indicator" name="indicator">Styling the Validation Error Indicator</a></h3>

<p>The standard validation error indicator is a red exclamation mark which is displayed at the left hand side of the row. The <code>DataGridRow</code> has a <code>ValidationErrorTemplate</code> which defines the appearance of this indicator. With the example given below, the exclamation mark is rendered within a red circle in order to give it a more striking appearance. Also, a tooltip is defined that displays the validation error message. The templated control which displays the error indicator is a child of the <code>DataGridRow</code>; therefore, we can obtain the validation errors from the row via a <code>FindAncestor</code> <code>RelativeSource</code> binding.</p>

<div class="pre-action-link" id="premain27" width="100%" style="display:block"><img id="preimg27" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="27" style="cursor: pointer;"><span id="precollapse27" preid="27" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="27">Copy Code</a></div><pre lang="xml" id="pre27" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">Style</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">RowStyle"</span> <span class="code-attribute">TargetType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type dg:DataGridRow}"</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">ValidationErrorTemplate"</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter.Value</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">ControlTemplate</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">Grid</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Ellipse</span> <span class="code-attribute">Width</span><span class="code-keyword">="</span><span class="code-keyword">12"</span> <span class="code-attribute">Height</span><span class="code-keyword">="</span><span class="code-keyword">12"</span>
                        <span class="code-attribute">Fill</span><span class="code-keyword">="</span><span class="code-keyword">Red"</span> <span class="code-attribute">Stroke</span><span class="code-keyword">="</span><span class="code-keyword">Black"</span>
                        <span class="code-attribute">StrokeThickness</span><span class="code-keyword">="</span><span class="code-keyword">0.5"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">TextBlock</span> <span class="code-attribute">FontWeight</span><span class="code-keyword">="</span><span class="code-keyword">Bold"</span> <span class="code-attribute">Padding</span><span class="code-keyword">="</span><span class="code-keyword">4,0,0,0"</span>
                        <span class="code-attribute">Margin</span><span class="code-keyword">="</span><span class="code-keyword">0"</span> <span class="code-attribute">VerticalAlignment</span><span class="code-keyword">="</span><span class="code-keyword">Top"</span> <span class="code-attribute">Foreground</span><span class="code-keyword">="</span><span class="code-keyword">White"</span> <span class="code-attribute">Text</span><span class="code-keyword">="</span><span class="code-keyword">!"</span>
                        <span class="code-attribute">ToolTip</span><span class="code-keyword">="</span><span class="code-keyword">{Binding RelativeSource={RelativeSource
                                 FindAncestor, AncestorType={x:Type dg:DataGridRow}},
                                 Path=(Validation.Errors)[0].ErrorContent}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Grid</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">ControlTemplate</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Setter.Value</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Setter</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Style</span><span class="code-keyword">&gt;</span></pre>

<p><img height="240" alt="customerrorindicator.png" src="./WPF DataGrid Practical Examples - CodeProject_files/customerrorindicator.png" width="312"></p>

<h3><a id="details" title="details" name="details">Row Details</a></h3>

<p>The WPF <code>DataGrid</code> has an interesting feature called <code>RowDetails</code>, which is an area of customisable content beneath each row. You can use the <code>RowDetailsVisibilityMode</code> property of the <code>DataGrid</code> to specify whether to display details just for the selected rows or for all the rows.</p>

<p>The following example shows a <code>DataGrid</code> bound to an XML source (the latest photos tagged with "cat" from Flickr). The <code>RowDetails</code> displays the image thumbnail and its associated tags:</p>

<div class="pre-action-link" id="premain28" width="100%" style="display:block"><img id="preimg28" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="28" style="cursor: pointer;"><span id="precollapse28" preid="28" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="28">Copy Code</a></div><pre lang="xml" id="pre28" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">XmlNamespaceMappingCollection</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">map"</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">XmlNamespaceMapping</span> <span class="code-attribute">Prefix</span><span class="code-keyword">="</span><span class="code-keyword">media"</span> <span class="code-attribute">Uri</span><span class="code-keyword">="</span><span class="code-keyword">http://search.yahoo.com/mrss/"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">XmlNamespaceMappingCollection</span><span class="code-keyword">&gt;</span>

<span class="code-keyword">&lt;</span><span class="code-leadattribute">XmlDataProvider</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">FlickrFeed"</span> <span class="code-attribute">XPath</span><span class="code-keyword">="</span><span class="code-keyword">//item[string-length(title)&gt;0]"</span>
                 <span class="code-attribute">Source</span><span class="code-keyword">="</span><span class="code-keyword">http://api.flickr.com/services/feeds/
                        photos_public.gne?tags=cat&amp;amp;lang=en-us
                        &amp;amp;format=rss_200"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>

...

<span class="code-keyword">&lt;</span><span class="code-leadattribute">Grid</span> <span class="code-attribute">Binding.XmlNamespaceManager</span><span class="code-keyword">="</span><span class="code-keyword">{StaticResource map}"</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid</span>  <span class="code-attribute">AutoGenerateColumns</span><span class="code-keyword">="</span><span class="code-keyword">False"</span>
                  <span class="code-attribute">SelectionMode</span><span class="code-keyword">="</span><span class="code-keyword">Extended"</span>
                  <span class="code-attribute">ItemsSource</span><span class="code-keyword">="</span><span class="code-keyword">{Binding Source={StaticResource FlickrFeed}}"</span>
                  <span class="code-attribute">RowDetailsVisibilityMode</span><span class="code-keyword">="</span><span class="code-keyword">VisibleWhenSelected"</span><span class="code-keyword">&gt;</span>

        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid.RowDetailsTemplate</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">DataTemplate</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">StackPanel</span> <span class="code-attribute">Orientation</span><span class="code-keyword">="</span><span class="code-keyword">Horizontal"</span> <span class="code-attribute">Margin</span><span class="code-keyword">="</span><span class="code-keyword">5"</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Image</span> <span class="code-attribute">Source</span><span class="code-keyword">="</span><span class="code-keyword">{Binding XPath=media:thumbnail/@url}"</span>
                           <span class="code-attribute">Width</span><span class="code-keyword">="</span><span class="code-keyword">60"</span> <span class="code-attribute">Height</span><span class="code-keyword">="</span><span class="code-keyword">60"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">StackPanel</span> <span class="code-attribute">Orientation</span><span class="code-keyword">="</span><span class="code-keyword">Vertical"</span> <span class="code-attribute">Margin</span><span class="code-keyword">="</span><span class="code-keyword">5"</span><span class="code-keyword">&gt;</span>
                        <span class="code-keyword">&lt;</span><span class="code-leadattribute">TextBlock</span> <span class="code-attribute">Foreground</span><span class="code-keyword">="</span><span class="code-keyword">CadetBlue"</span> <span class="code-attribute">FontSize</span><span class="code-keyword">="</span><span class="code-keyword">20"</span>
                            <span class="code-attribute">Width</span><span class="code-keyword">="</span><span class="code-keyword">400"</span> <span class="code-attribute">TextWrapping</span><span class="code-keyword">="</span><span class="code-keyword">Wrap"</span>
                            <span class="code-attribute">Text</span><span class="code-keyword">="</span><span class="code-keyword">{Binding XPath=media:category}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">StackPanel</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">StackPanel</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">DataTemplate</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid.RowDetailsTemplate</span><span class="code-keyword">&gt;</span>

        <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Title"</span>
                  <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding XPath=title}"</span> <span class="code-attribute">Width</span><span class="code-keyword">="</span><span class="code-keyword">150"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Published"</span>
                  <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding XPath=pubDate}"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridTextColumn</span> <span class="code-attribute">Header</span><span class="code-keyword">="</span><span class="code-keyword">Author"</span>
                <span class="code-attribute">Binding</span><span class="code-keyword">="</span><span class="code-keyword">{Binding XPath=media:credit}"</span> <span class="code-attribute">Width</span><span class="code-keyword">="</span><span class="code-keyword">*"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid.Columns</span><span class="code-keyword">&gt;</span>

    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">dg:DataGrid</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Grid</span><span class="code-keyword">&gt;</span></pre>

<p><img height="300" alt="rowdetails.png" src="./WPF DataGrid Practical Examples - CodeProject_files/rowdetails.png" width="600"></p>

<h3><a id="header" title="header" name="header">Styling the Column Header</a></h3>

<p>The style of the column header can easily be modified via the <code>ColumnHeaderStyle</code> of the <code>DataGrid</code>. However, if you modify the background colour of the column header, you will find that the sort arrows disappear! This is because the arrows are not part of the <code>ColumnHeader</code> template; instead, they are added programmatically.</p>

<p>The <code>ColumnHeader</code> template contains a <code>DataGridHeaderBorder</code>. This element is used to render the sort arrows, and optionally render a thin separator between each header if <code>SeparatorVisibility</code> is set to <code>Visible</code>. This rendering takes place within the <code>OnRender</code> method of this class; however, if a <code>Background</code> or <code>BorderBrush</code> is set, the rendering is performed by the standard WPF <code>Border</code> class; therefore, arrows and separators are lost.</p>

<p>The following example shows how sort arrows can be manually added to the header template in order to replace this behaviour:</p>

<div class="pre-action-link" id="premain29" width="100%" style="display:block"><img id="preimg29" src="./WPF DataGrid Practical Examples - CodeProject_files/minus.gif" height="9" width="9" preid="29" style="cursor: pointer;"><span id="precollapse29" preid="29" style="cursor: pointer; margin-bottom: 0px;"> Collapse</span><span> | </span><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" preid="29">Copy Code</a></div><pre lang="xml" id="pre29" style="margin-top: 0px;"><span class="code-keyword">&lt;</span><span class="code-leadattribute">Style</span> <span class="code-attribute">x:Key</span><span class="code-keyword">="</span><span class="code-keyword">HeaderStyle"</span> <span class="code-attribute">TargetType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type dg:DataGridColumnHeader}"</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">VerticalContentAlignment"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">Center"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Background"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">Pink"</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Template"</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter.Value</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-leadattribute">ControlTemplate</span> <span class="code-attribute">TargetType</span><span class="code-keyword">="</span><span class="code-keyword">{x:Type dg:DataGridColumnHeader}"</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">Grid</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">dg:DataGridHeaderBorder</span> <span class="code-attribute">...</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Thumb</span> <span class="code-attribute">...</span> <span class="code-keyword">/</span><span class="code-keyword">&gt;</span>

                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Path</span> <span class="code-attribute">Name</span><span class="code-keyword">="</span><span class="code-keyword">UpArrow"</span> <span class="code-attribute">Fill</span><span class="code-keyword">="</span><span class="code-keyword">Black"</span> <span class="code-attribute">HorizontalAlignment</span><span class="code-keyword">="</span><span class="code-keyword">Right"</span>
                          <span class="code-attribute">VerticalAlignment</span><span class="code-keyword">="</span><span class="code-keyword">Center"</span>
                          <span class="code-attribute">Margin</span><span class="code-keyword">="</span><span class="code-keyword">0,0,7,0"</span> <span class="code-attribute">Visibility</span><span class="code-keyword">="</span><span class="code-keyword">Hidden"</span><span class="code-keyword">&gt;</span>
                        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Path.Data</span><span class="code-keyword">&gt;</span>
                            <span class="code-keyword">&lt;</span><span class="code-leadattribute">PathGeometry</span><span class="code-keyword">&gt;</span>
                                <span class="code-keyword">&lt;</span><span class="code-leadattribute">PathFigure</span> <span class="code-attribute">StartPoint</span><span class="code-keyword">="</span><span class="code-keyword">0,0"</span><span class="code-keyword">&gt;</span>
                                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">LineSegment</span> <span class="code-attribute">Point</span><span class="code-keyword">="</span><span class="code-keyword">6,0"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">LineSegment</span> <span class="code-attribute">Point</span><span class="code-keyword">="</span><span class="code-keyword">3,5"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">LineSegment</span> <span class="code-attribute">Point</span><span class="code-keyword">="</span><span class="code-keyword">0,0"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                                <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">PathFigure</span><span class="code-keyword">&gt;</span>
                            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">PathGeometry</span><span class="code-keyword">&gt;</span>
                        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Path.Data</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Path</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Path</span> <span class="code-attribute">Name</span><span class="code-keyword">="</span><span class="code-keyword">DownArrow"</span> <span class="code-attribute">Fill</span><span class="code-keyword">="</span><span class="code-keyword">Black"</span> <span class="code-attribute">HorizontalAlignment</span><span class="code-keyword">="</span><span class="code-keyword">Right"</span>
                          <span class="code-attribute">VerticalAlignment</span><span class="code-keyword">="</span><span class="code-keyword">Center"</span> <span class="code-attribute">Margin</span><span class="code-keyword">="</span><span class="code-keyword">0,0,7,0"</span> 
		        <span class="code-attribute">Visibility</span><span class="code-keyword">="</span><span class="code-keyword">Hidden"</span><span class="code-keyword">&gt;</span>
                        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Path.Data</span><span class="code-keyword">&gt;</span>
                            <span class="code-keyword">&lt;</span><span class="code-leadattribute">PathGeometry</span><span class="code-keyword">&gt;</span>
                                <span class="code-keyword">&lt;</span><span class="code-leadattribute">PathFigure</span> <span class="code-attribute">StartPoint</span><span class="code-keyword">="</span><span class="code-keyword">0,5"</span><span class="code-keyword">&gt;</span>
                                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">LineSegment</span> <span class="code-attribute">Point</span><span class="code-keyword">="</span><span class="code-keyword">6,5"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">LineSegment</span> <span class="code-attribute">Point</span><span class="code-keyword">="</span><span class="code-keyword">3,0"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">LineSegment</span> <span class="code-attribute">Point</span><span class="code-keyword">="</span><span class="code-keyword">0,5"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                                <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">PathFigure</span><span class="code-keyword">&gt;</span>
                            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">PathGeometry</span><span class="code-keyword">&gt;</span>
                        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Path.Data</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Path</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Grid</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-leadattribute">ControlTemplate.Triggers</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Trigger</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">SortDirection"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">Descending"</span><span class="code-keyword">&gt;</span>
                        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">TargetName</span><span class="code-keyword">="</span><span class="code-keyword">UpArrow"</span>
                                <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Visibility"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">Hidden"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">TargetName</span><span class="code-keyword">="</span><span class="code-keyword">DownArrow"</span>
                                <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Visibility"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">Visible"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Trigger</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-leadattribute">Trigger</span> <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">SortDirection"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">Ascending"</span><span class="code-keyword">&gt;</span>
                        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">TargetName</span><span class="code-keyword">="</span><span class="code-keyword">DownArrow"</span>
                                <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Visibility"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">Hidden"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                        <span class="code-keyword">&lt;</span><span class="code-leadattribute">Setter</span> <span class="code-attribute">TargetName</span><span class="code-keyword">="</span><span class="code-keyword">UpArrow"</span>
                                <span class="code-attribute">Property</span><span class="code-keyword">="</span><span class="code-keyword">Visibility"</span> <span class="code-attribute">Value</span><span class="code-keyword">="</span><span class="code-keyword">Visible"</span><span class="code-keyword">/</span><span class="code-keyword">&gt;</span>
                    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Trigger</span><span class="code-keyword">&gt;</span>
                <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">ControlTemplate.Triggers</span><span class="code-keyword">&gt;</span>
            <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">ControlTemplate</span><span class="code-keyword">&gt;</span>
        <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Setter.Value</span><span class="code-keyword">&gt;</span>
    <span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Setter</span><span class="code-keyword">&gt;</span>
<span class="code-keyword">&lt;</span><span class="code-keyword">/</span><span class="code-leadattribute">Style</span><span class="code-keyword">&gt;</span></pre>

<p>Property triggers on the control template are used to toggle the visibility of the named paths, with the result shown below:</p>
<img height="359" alt="sortindicators.png" src="./WPF DataGrid Practical Examples - CodeProject_files/sortindicators.png" width="563"> 
<h3><a id="fun" title="fun" name="fun"></a>Having Some Fun ...</h3>

<p>The final example is just a demonstration of the type of styling that can be applied to a WPF <code>DataGrid</code>. We have all the usual suspects, rounded glass effect tabs for column headings, grouping with a customised Expander template, mouse-over highlighting, etc.</p>

<p>For details of how this style was assembled, download the article source and pick apart the code. There is nothing special in there, just the usual application of styles and cut-n-paste control template modification.</p>

<p><img height="530" alt="styled.png" src="./WPF DataGrid Practical Examples - CodeProject_files/styled.png" width="536"></p>

<h2><a id="summary" title="summary" name="summary">Summary</a></h2>

<p>This article has been a bit of a mixed-bag of samples; however, I hope that some of you out there will find something of use to you. The WPF <code>DataGrid</code>, although currently rough around the edges, is a control with great potential. Personally, I hope Microsoft puts a lot more effort into the design-time support of this control and the WPF Framework, in general. Currently, I feel that the "bar" for developing WPF applications is quite high, a richer design-time experience. All the automated generation of bound controls would certainly help open up WPF to a far wider audience.</p>

<p>Finally, if you have any questions, or can think of other WPF <code>DataGrid</code> related areas that you feel need exploring, please let me know in the comments section below.</p>

<h2>Resources</h2>

<p>The following is a collection of resources that may be of interest to users of the <code>DataGrid</code>:</p>

<ul>
<li><a href="http://www.scottlogic.co.uk/blog/wpf/2008/12/wpf-datagrid-detecting-clicked-cell-and-row/">Detecting the row and column clicked on the WPF DataGrid</a> - It is not as straightforward as it may seem to determine where a user has clicked on the <code>DataGrid</code>, this blog post shows you how to do it.</li>

<li><a href="http://blogs.msdn.com/vinsibal/archive/2008/08/14/wpf-datagrid-dissecting-the-visual-layout.aspx">WPF DataGrid: Dissecting the Visual Layout</a> - An excellent article that describes the various component parts of the <code>DataGrid</code>.</li>

<li><a href="http://www.scottlogic.co.uk/blog/wpf/2009/01/wpf-datagrid-committing-changes-cell-by-cell/">Committing changes cell-by-cell</a> - How to commit the changes made as the user moves from cell to cell.</li>

<li><a href="http://blogs.msdn.com/jaimer/archive/2009/01/20/styling-microsoft-s-wpf-datagrid.aspx">Styling the DataGrid</a> - A guide to styling the WPF <code>DataGrid</code>.</li>

<li><a href="http://www.scottlogic.co.uk/blog/wpf/2008/11/multiselect-datagrid-with-checkboxes/">Multiselection with checkboxes</a> - How to style the <code>DataGrid </code>so that each row has a checkbox which can be used to toggle selection.</li>
</ul>

<h2>History</h2>

<ul>
<li><strong>01/02/2009</strong> - Added a Resources section</li>

<li><strong>18/11/2008</strong> - Added a new section, <a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#layered">Binding in a layered application</a></li>

<li><strong>12/11/2008</strong> - Initial article upload</li>
</ul>


							</div>
							

							
							
							<h2>License</h2>
							<div id="LicenseTerms"><p>This article, along with any associated source code and files, is licensed under <a href="http://www.codeproject.com/info/cpol10.aspx" rel="license">The Code Project Open License (CPOL)</a></p></div>
							

							<div class="float-right" style="margin:20px 0 0 0;border:1px solid #ccc">
							<div class="msg-300x250" data-format="300x250" data-type="ad" data-publisher="lqm.codeproject.site" data-zone="ros" data-loadonview="true" data-tags="C#3.0, .NET3.5, Windows, Dev, XAML, WPF, Beginner, Intermediate,rating4.5"></div>
							</div>

							
							<h2 id="ctl00_AboutHeading">About the Author</h2>

							
							

<div class="container">
<div style="width:210px;overflow:hidden;float:left;text-align:center">
	<img id="ctl00_AboutAuthorRptr_ctl00_AboutAuthor_memberPhoto" class="profile-pic" src="./WPF DataGrid Practical Examples - CodeProject_files/{c88e653f-26fa-4d4e-9893-e43f90546a59}.jpg" style="border-width:0px;transform:rotate(1deg);">
</div>
<div class="container-member float-left" style="width:235px">
	<b><a id="ctl00_AboutAuthorRptr_ctl00_AboutAuthor_memberProfileLink" class="author" href="http://www.codeproject.com/Members/Colin-Eberhardt">Colin Eberhardt</a></b>
	<div class="company">
		<span id="ctl00_AboutAuthorRptr_ctl00_AboutAuthor_memberJobTitle">Architect</span>
		<span id="ctl00_AboutAuthorRptr_ctl00_AboutAuthor_memberCompany">Scott Logic</span> 
		<br><span id="ctl00_AboutAuthorRptr_ctl00_AboutAuthor_memberLocation">United Kingdom <img src="./WPF DataGrid Practical Examples - CodeProject_files/UK.gif" alt="United Kingdom" width="16px" height="11px"></span>
	</div>
</div>
	
<div class="padded-top float-left clearfix" style="width:600px">
	I am CTO at <a rel="nofollow" href="http://www.shinobicontrols.com/">ShinobiControls</a>, a team of iOS developers who are carefully crafting <a rel="nofollow" href="http://www.shinobicontrols.com/">iOS charts, grids and controls</a> for making your applications awesome.<br>
&nbsp;<br>
I am a Technical Architect for <a rel="nofollow" href="http://www.visiblox.com/">Visiblox</a> which have developed the <a rel="nofollow" href="http://www.visiblox.com/">world's fastest WPF / Silverlight and WP7 charts</a>.<br>
&nbsp;<br>
I am also a Technical Evangelist at <a rel="nofollow" href="http://www.scottlogic.co.uk/">Scott Logic</a>, a provider of bespoke financial software and consultancy for the retail and investment banking, stockbroking, asset management and hedge fund communities.<br>
&nbsp;<br>
Visit my blog - <a rel="nofollow" href="http://www.scottlogic.co.uk/blog/wpf/">Colin Eberhardt's Adventures in .NET</a>.<br>
&nbsp;<br>
Follow me on Twitter - <a rel="nofollow" href="https://twitter.com/#!/ColinEberhardt">@ColinEberhardt</a><br>
&nbsp;<br>
-

	

	<div id="ctl00_AboutAuthorRptr_ctl00_AboutAuthor_FollowOn" class="padded-top">Follow on
		&nbsp; <a href="http://www.twitter.com/ColinEberhardt"><img style="vertical-align:middle;border:0;" alt="Twitter" src="./WPF DataGrid Practical Examples - CodeProject_files/t_logo-a.png"></a> <a href="http://www.twitter.com/ColinEberhardt?rel=author" rel="author" class="small-text">Twitter</a>
		&nbsp; <a href="https://plus.google.com/104181672098184856535"><img style="vertical-align:middle;border:0;" alt="Google+" src="./WPF DataGrid Practical Examples - CodeProject_files/gplus-32.png"></a> <a href="https://plus.google.com/104181672098184856535?rel=author" rel="author" class="small-text">Google</a>
	</div>
</div>
</div><br>
							
							

							<div class="clearfix"></div>

							
							<div id="ctl00_RateArticleRow" class="clearfix voting-bar">
							<div class="float-left" style="padding-top:8px"><a class="anchorLink" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#_articleTop">Article Top</a></div>
							<div class="float-left"><a id="_rating" name="_rating">&nbsp;</a></div> 
							<div class="float-left">

<div class="social-bookmarks">
<span class="facebook"><div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_http" frameborder="0" allowtransparency="true" scrolling="no" id="fb_xdm_frame_http" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tab-index="-1" src="./WPF DataGrid Practical Examples - CodeProject_files/xd_arbiter.htm" style="border: none;"></iframe><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tab-index="-1" src="./WPF DataGrid Practical Examples - CodeProject_files/xd_arbiter(1).htm" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div><div class="fb-like fb_edge_widget_with_comment fb_iframe_widget" data-href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false" data-font="segoe ui" fb-xfbml-state="rendered"><span style="height: 20px; width: 71px;"><iframe id="f1dd1747c4" name="f12e5ba37" scrolling="no" title="Like this content on Facebook." class="fb_ltr" src="./WPF DataGrid Practical Examples - CodeProject_files/like.htm" style="border: none; overflow: hidden; height: 20px; width: 71px;"></iframe></span></div></span>
<span class="google" style="position:relative;top:-4px"><div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background-color: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px; background-position: initial initial; background-repeat: initial initial;"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" tabindex="0" vspace="0" width="100%" id="I0_1377798443099" name="I0_1377798443099" src="./WPF DataGrid Practical Examples - CodeProject_files/fastbutton.htm" data-gapiattached="true" title="+1"></iframe></div></span>
<span class="twitter" style="position:relative;top:-4px"><iframe allowtransparency="true" frameborder="0" scrolling="no" src="./WPF DataGrid Practical Examples - CodeProject_files/tweet_button.1375828408.htm" class="twitter-share-button twitter-count-horizontal" title="Twitter Tweet Button" data-twttr-rendered="true" style="width: 110px; height: 20px;"></iframe></span>
</div></div> 
							<div class="float-right align-right">
								<div id="ctl00_RateArticle_RateItemWrapper" class="small-text" name="RateItem_30905">

	<table width="100%" cellpadding="0" cellspacing="0" class="small-text">
	<tbody><tr>
		<td id="ctl00_RateArticle_VoteResultDiv" nowrap="nowrap" align="right">
			<span class="voteRes"></span>
			<img class="loaderImg" width="16px" alt="loading..." height="16px" src="./WPF DataGrid Practical Examples - CodeProject_files/animated_loading_blue.gif" style="display:none;"> 
		</td>

	
		<td class="voteTbl" style="white-space:nowrap" align="right">
			<table class="small-text">
			<tbody><tr>
				<td id="ctl00_RateArticle_SignIn" nowrap="nowrap">
					<a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#SignUp">Sign Up</a> to vote
				</td>

				
				<td id="ctl00_RateArticle_StartForm" align="right" nowrap="nowrap">
					<i>&nbsp;&nbsp;Poor</i>
				</td>

				<td id="ctl00_RateArticle_VoteFormDiv" class="nowrap">
					

					<span id="ctl00_RateArticle_RB" class="tooltip ajaxHist radio voting">
						<span id="ctl00_RateArticle_VoteRBL"><input id="ctl00_RateArticle_VoteRBL_0" type="radio" name="ctl00$RateArticle$VoteRBL" value="1" onclick="ChkRtctl00_RateArticle(1, 30905);
$(&#39;#ctl00_RateArticle_RCD&#39;).show();
;"><input id="ctl00_RateArticle_VoteRBL_1" type="radio" name="ctl00$RateArticle$VoteRBL" value="2" onclick="ChkRtctl00_RateArticle(2, 30905);
$(&#39;#ctl00_RateArticle_RCD&#39;).show();
;"><input id="ctl00_RateArticle_VoteRBL_2" type="radio" name="ctl00$RateArticle$VoteRBL" value="3" onclick="ChkRtctl00_RateArticle(3, 30905);
$(&#39;#ctl00_RateArticle_RCD&#39;).show();
;"><input id="ctl00_RateArticle_VoteRBL_3" type="radio" name="ctl00$RateArticle$VoteRBL" value="4" onclick="ChkRtctl00_RateArticle(4, 30905);
$(&#39;#ctl00_RateArticle_RCD&#39;).show();
;"><input id="ctl00_RateArticle_VoteRBL_4" type="radio" name="ctl00$RateArticle$VoteRBL" value="5" onclick="ChkRtctl00_RateArticle(5, 30905);
$(&#39;#ctl00_RateArticle_RCD&#39;).show();
;"></span> 

						
					</span>

				</td>

				<td id="ctl00_RateArticle_EndForm" align="left">
					<i>Excellent</i>
				</td>

				<td style="padding-left:5px">	
					<input type="submit" name="ctl00$RateArticle$SubmitRateBtn" value="Vote" onclick="return PostBack_ctl00_RateArticle_RateItemWrapper();" id="ctl00_RateArticle_SubmitRateBtn" class="button">
				</td>
			</tr>
			</tbody></table>
			
		</td>
	</tr>
	</tbody></table>
	<div class="hover-container">
		<div id="ctl00_RateArticle_RCD" class="rating-comment align-left float-right">
			Add a reason or comment to your vote: <a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples#" id="clear-rate_ctl00_RateArticle_RCD" title="close">x</a><br>
			<textarea class="RateComment" rows="5" cols="60" style="width:98%;"></textarea>
			<span id="ctl00_RateArticle_CommentReq" class="subdue">Votes of 3 or less require a comment</span>
		</div>
	</div>
</div>
							</div>
							</div>
							

						</form>

						
						<div style="margin:auto;height:90px;margin-top:10px"> 
							<div class="msg-728x90" data-format="728x90" data-type="ad" data-publisher="lqm.codeproject.site" data-zone="bottom" data-loadonview="true" data-tags="C#3.0, .NET3.5, Windows, Dev, XAML, WPF, Beginner, Intermediate,pos_bottom"></div>
						</div>
						
					

				</div>

				
					
					<h2>Comments and Discussions</h2>
					<a class="float-left" name="_comments" id="_comments">&nbsp;</a><table id="ForumTable" class="forum relaxed" cellpadding="0" cellspacing="0">
	<tbody><tr>
		<td class="header1 callout"><b>Hint:</b> For improved responsiveness ensure Javascript is enabled and choose 'Normal' from the Layout dropdown and hit 'Update'.<br><b>You must <a href="https://www.codeproject.com/script/Membership/LogOn.aspx?rp=%2fArticles%2f30905%2fWPF-DataGrid-Practical-Examples%3ffid%3d1530506%26df%3d10000%26mpp%3d10%26noise%3d1%26prof%3dTrue%26sort%3dPosition%26view%3dNone%26spc%3dRelaxed">Sign In</a> to use this message board.</b></td>
	</tr><tr>
		<td><table width="100%" border="0" cellpadding="3px" cellspacing="0">
			<tbody><tr class="header1">
				<td colspan="2" style="white-space:nowrap;"><div class="container">
					<div class="float-right">
						<form action="http://www.codeproject.com/Search.aspx?fid=0" method="get" class="tight">
							<input type="hidden" name="fid" value="1530506"><b>Search this forum </b><input type="text" class="text-input" name="qf" style="width:200px;">&nbsp;<input type="submit" value="Go" class="button">
						</form>
					</div>
				</div></td></tr><tr class="header2">
					<td></td><td style="width:100%;"><div style="text-align:right;">
						<form action="http://www.codeproject.com/script/Forums/SetOptions.aspx?floc=%2fArticles%2f30905%2fWPF-DataGrid-Practical-Examples&fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed" method="get" style="margin:0;padding:0;">
							<input type="hidden" name="fid" value="1530506"><input type="hidden" name="currentQS" value="?floc=%2fArticles%2f30905%2fWPF-DataGrid-Practical-Examples&amp;fid=1530506&amp;df=10000&amp;mpp=10&amp;noise=1&amp;prof=True&amp;sort=Position&amp;view=None&amp;spc=Relaxed"><input type="hidden" name="floc" value="/Articles/30905/WPF-DataGrid-Practical-Examples"><input type="checkbox" checked="checked" name="prof" id="prof" style="vertical-align:middle;"><label for="prof">Profile popups</label>&nbsp;&nbsp;&nbsp;&nbsp;Spacing<select size="1" class="dropdown" name="spc">
								<option selected="" value="Relaxed">Relaxed</option><option value="Compact">Compact</option><option value="Tight">Tight</option>
							</select>&nbsp;&nbsp;Noise<select size="1" class="dropdown" name="noise">
								<option selected="" value="1">Very High</option><option value="2">High</option><option value="3">Medium</option><option value="4">Low</option><option value="5">Very Low</option>
							</select>&nbsp;&nbsp;Layout<select size="1" class="dropdown" name="view">
								<option value="Quick">Normal</option><option value="Topic">Open Topics</option><option value="Expanded">Open All</option><option value="Thread">Thread View</option><option value="Normal">No Javascript</option><option value="Preview">Preview</option>
							</select>&nbsp;&nbsp;Per page<select size="1" class="dropdown" name="mpp">
								<option selected="" value="10">10</option><option value="25">25</option><option value="50">50</option>
							</select>&nbsp;&nbsp;&nbsp;<input type="submit" value="Update" name="SetOpt" class="button">
						</form>
					</div></td>
				</tr>
			
		</tbody></table></td></tr><tr>
			<td><a name="xx0xx"></a><table border="0" cellpadding="2px" cellspacing="0" width="100%">
				<tbody><tr class="navbar">
					<td></td><td style="text-align:right;width:50%;"></td><td style="text-align:right;white-space:nowrap;"><span class="nav-link disabled">First</span> <span class="nav-link disabled">Prev</span><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=11#xx0xx">Next</a></td>
				</tr>
			</tbody></table></td>
		</tr><tr>
			<td><table border="0" cellpadding="0" cellspacing="0" width="100%" class="fixed-layout blank-background">
				<tbody><tr>
					<td><img src="./WPF DataGrid Practical Examples - CodeProject_files/t(1).gif" border="0" width="1px" height="5px" alt=""></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4603479xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_question.gif" alt="Question"></td><td class="subject hover-container"><a class="message-link" name="4603479" parent="0" thread="4603479" href="http://www.codeproject.com/Messages/4603479/Crashes-in-VIsual-Studio-2012.aspx">Crashes in VIsual Studio 2012</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=1077966">Grant Gussie</a></td><td class="date">3-Jul-13  12:06&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4542798xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_question.gif" alt="Question"></td><td class="subject hover-container"><a class="message-link" name="4542798" parent="0" thread="4542798" href="http://www.codeproject.com/Messages/4542798/WPFToolKit-Project-does-not-exists.aspx">WPFToolKit Project does not exists</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=1999108">muhammadali</a></td><td class="date">17-Apr-13  0:16&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4530996xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_general.gif" alt="General"></td><td class="subject hover-container"><a class="message-link" name="4530996" parent="0" thread="4530996" href="http://www.codeproject.com/Messages/4530996/My-vote-of-5.aspx">My vote of 5</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=9186678">Naz_Firdouse</a></td><td class="date">2-Apr-13  2:43&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4522121xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_general.gif" alt="General"></td><td class="subject hover-container"><a class="message-link" name="4522121" parent="0" thread="4522121" href="http://www.codeproject.com/Messages/4522121/My-vote-of-5.aspx">My vote of 5</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=9677510">YasminSirpi</a></td><td class="date">19-Mar-13  22:48&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4489542xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_general.gif" alt="General"></td><td class="subject hover-container"><a class="message-link" name="4489542" parent="0" thread="4489542" href="http://www.codeproject.com/Messages/4489542/My-vote-of-5.aspx">My vote of 5</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=6785474">edofreak</a></td><td class="date">6-Feb-13  4:21&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4460695xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_question.gif" alt="Question"></td><td class="subject hover-container"><a class="message-link" name="4460695" parent="0" thread="4460695" href="http://www.codeproject.com/Messages/4460695/Error.aspx">Error</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=9708018">Skish Champi</a></td><td class="date">27-Dec-12  23:12&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4429945xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_general.gif" alt="General"></td><td class="subject hover-container"><a class="message-link" name="4429945" parent="0" thread="4429945" href="http://www.codeproject.com/Messages/4429945/My-vote-of-5.aspx">My vote of 5</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=5201624">WESTSEYI</a></td><td class="date">17-Nov-12  1:47&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4394729xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_general.gif" alt="General"></td><td class="subject hover-container"><a class="message-link" name="4394729" parent="0" thread="4394729" href="http://www.codeproject.com/Messages/4394729/My-vote-of-5.aspx">My vote of 5</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=8632424">kiransolkar</a></td><td class="date">11-Oct-12  2:42&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4394728xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_general.gif" alt="General"></td><td class="subject hover-container"><a class="message-link" name="4394728" parent="0" thread="4394728" href="http://www.codeproject.com/Messages/4394728/My-vote-of-5.aspx">My vote of 5</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=8632424">kiransolkar</a></td><td class="date">11-Oct-12  2:42&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr class="header hover-row root">
					<td class="subject-line none " width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">
						<tbody><tr>
							<td width="20px" class="indent"><a name="xx4378185xx"></a><img height="16px" width="16px" align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_general.gif" alt="General"></td><td class="subject hover-container"><a class="message-link" name="4378185" parent="0" thread="4378185" href="http://www.codeproject.com/Messages/4378185/Great-article-Thanks-very-much.aspx">Great article, Thanks very much!</a></td><td class="icon"><img border="0" src="./WPF DataGrid Practical Examples - CodeProject_files/icn-member-16.gif" title="member" alt="member" height="16px"></td><td class="author"><a href="http://www.codeproject.com/script/Membership/View.aspx?mid=4735020">Member 4735020</a></td><td class="date">25-Sep-12  2:41&nbsp;</td>
						</tr>
					</tbody></table></td>
				</tr><tr>
					<td><img src="./WPF DataGrid Practical Examples - CodeProject_files/t(1).gif" border="0" width="1px" height="5px" alt=""></td>
				</tr>
			</tbody></table></td>
		</tr><tr>
			<td><table width="100%" cellpadding="2px" cellspacing="0">
				<tbody><tr class="footer">
					<td>Last Visit: 31-Dec-99  18:00 &nbsp; &nbsp; Last Update: 29-Aug-13  3:45</td><td><a href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed">Refresh</a></td><td style="text-align:right;white-space:nowrap;"><input id="_mbnUrl" type="hidden" value="/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&amp;df=10000&amp;mpp=10&amp;noise=1&amp;prof=True&amp;sort=Position&amp;view=None&amp;spc=Relaxed&amp;fr=11"><span class="nav-link selected">1</span><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=11#xx0xx">2</a><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=21#xx0xx">3</a><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=31#xx0xx">4</a><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=41#xx0xx">5</a><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=51#xx0xx">6</a><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=61#xx0xx">7</a><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=71#xx0xx">8</a><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=81#xx0xx">9</a><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=91#xx0xx">10</a><a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=101#xx0xx">11</a> <a class="nav-link" name="Frm_HoverNL" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?fid=1530506&df=10000&mpp=10&noise=1&prof=True&sort=Position&view=None&spc=Relaxed&fr=11#xx0xx">Next »</a></td>
				</tr>
			</tbody></table></td>
		</tr>
	
</tbody></table><p class="small-text"><img align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_general.gif" width="16px" height="16px" alt="General"> General &nbsp;&nbsp; <img align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_news.gif" width="16px" height="16px" alt="News"> News &nbsp;&nbsp; <img align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_idea.gif" width="16px" height="16px" alt="Suggestion"> Suggestion &nbsp;&nbsp; <img align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_question.gif" width="16px" height="16px" alt="Question"> Question &nbsp;&nbsp; <img align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_bug.gif" width="16px" height="16px" alt="Bug"> Bug &nbsp;&nbsp; <img align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_answer.gif" width="16px" height="16px" alt="Answer"> Answer &nbsp;&nbsp; <img align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_joke.gif" width="16px" height="16px" alt="Joke"> Joke &nbsp;&nbsp; <img align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_rant.gif" width="16px" height="16px" alt="Rant"> Rant &nbsp;&nbsp; <img align="top" src="./WPF DataGrid Practical Examples - CodeProject_files/msg_admin.gif" width="16px" height="16px" alt="Admin"> Admin &nbsp;&nbsp; </p>

				

			</div>
			
		</td>
		<td>
			<div id="ctl00_RightSideBar" class="container-article-info">

				<div class="header">About Article</div>
				<div class="article-summary">

					
					

					
					

					
					<div class="summary"><span id="ctl00_ArticleDescr">This article provides a number of practical examples which demonstrate how to perform validation, styling, and DataSet integration with the new WPF DataGrid.</span></div>

					<a id="ctl00_InfoBox_ParentLink"></a>

<table cellpadding="0" cellspacing="0" class="article-info">

	
	<tbody><tr><td>Type&nbsp;</td><td class="value"><a id="ctl00_InfoBox_TypeName" href="http://www.codeproject.com/script/Articles/Types.aspx?#Article">Article</a></td></tr>
	

	<tr><td>Licence&nbsp;</td><td class="value"><a href="http://www.codeproject.com/info/cpol10.aspx" title="The Code Project Open License (CPOL)">CPOL</a></td></tr>

	

	<tr><td>First Posted&nbsp;</td><td nowrap="nowrap" class="value"><span itemprop="datePublished" content="2008-11-12">12 Nov 2008</span></td></tr>

	<tr><td>Views&nbsp;</td><td class="value">1,331,563</td></tr>

	
	<tr><td>Downloads&nbsp;</td><td class="value">34,750</td></tr>
		

	
	<tr><td>Bookmarked&nbsp;</td><td class="value">616 times</td></tr>
	

	

	
	
	
	<tr><td colspan="2"></td>
	</tr>
	
	
</tbody></table>

					<div class="tags"> 
					<span id="ctl00_TagsList_TagWrp" class="tags">
	
	
	
	<span id="ctl00_TagsList_VisibleTags"><span class="t"><a rel="tag" href="http://www.codeproject.com/Tags/C--hash--3.0">C#3.0</a></span><span class="t"><a rel="tag" href="http://www.codeproject.com/Tags/.NET3.5">.NET3.5</a></span><span class="t"><a rel="tag" href="http://www.codeproject.com/Tags/Windows">Windows</a></span><br><span class="t"><a rel="tag" href="http://www.codeproject.com/Tags/Dev">Dev</a></span><span class="t"><a rel="tag" href="http://www.codeproject.com/Tags/XAML">XAML</a></span><span class="t"><a rel="tag" href="http://www.codeproject.com/Tags/WPF">WPF</a></span><span class="t"><a rel="tag" href="http://www.codeproject.com/Tags/Beginner">Beginner</a></span></span><acronym id="ctl00_TagsList_HiddenTags" title="plus: Intermediate">, +</acronym> 

	
	
</span>

					</div>

					<div class="nowrap align-left">
						 

<a id="ctl00_ActionLinks_PrintLnk" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?display=Print">
	<img src="./WPF DataGrid Practical Examples - CodeProject_files/print.gif" width="46px" height="46px" style="border:0">
</a>

<a id="ctl00_ActionLinks_MailLink" href="http://www.codeproject.com/script/common/TellFriend.aspx?obtid=2&obid=30905">
	<img src="./WPF DataGrid Practical Examples - CodeProject_files/email.gif" width="46px" height="46px" style="border:0">
</a>
					</div>

					
				</div>

				<div style="width:160px;margin: 10px auto;">
					<div class="msg-160x600" data-format="160x600" data-type="ad" data-publisher="lqm.codeproject.site" data-zone="ros" data-tags="C#3.0, .NET3.5, Windows, Dev, XAML, WPF, Beginner, Intermediate,rating4.5"><iframe id="dmad4" allowtransparency="false" style="z-index:10" width="160" height="600" marginwidth="0" marginheight="0" frameborder="0" scrolling="no"></iframe></div>
				</div>

				
<div class="padded-top">
<div class="header">Top News</div>

<p><a id="ctl00_News_News_ctl01_Link" href="http://www.infoworld.com/print/225344">6 technologies you should learn this year</a></p>

Get the <a id="ctl00_News_News_ctl02_Subscribe" href="http://www.codeproject.com/Feature/Insider/">Insider News</a> free each morning.
</div>

				

				<div class="padded-top">
					
	<div id="ctl00_RelatedVideos_RelatedResults_ctl00_header" class="header">Related Videos</div>
	<div class="content-list align-center">	
	
	<div class="content-list-item">
		<a id="ctl00_RelatedVideos_RelatedResults_ctl01_Link" class="title" href="http://codeproject.tv/video/4889520/wildcards"><img id="ctl00_RelatedVideos_RelatedResults_ctl01_Thumbnail" src="./WPF DataGrid Practical Examples - CodeProject_files/vtclogo.png" style="border-style:None;width:125px;border-width:0px;"></a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedVideos_RelatedResults_ctl02_Link" class="title" href="http://codeproject.tv/video/5015343/beginners_java_programming_-_1403_polymorphism_example"><img id="ctl00_RelatedVideos_RelatedResults_ctl02_Thumbnail" src="./WPF DataGrid Practical Examples - CodeProject_files/Java-100.jpg" style="border-style:None;width:125px;border-width:0px;"></a>
		
	</div>
	
	</div>
	

				</div>
				<div class="padded-top">
					
	<div id="ctl00_RelatedArticles_RelatedResults_ctl00_header" class="header">Related Articles</div>
	<div class="content-list">	
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl02_Link" class="title" href="http://www.codeproject.com/Articles/42548/MVVM-and-the-WPF-DataGrid">MVVM and the WPF DataGrid</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl03_Link" class="title" href="http://www.codeproject.com/Articles/42227/Automatic-WPF-Toolkit-DataGrid-Filtering">Automatic WPF Toolkit DataGrid Filtering</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl04_Link" class="title" href="http://www.codeproject.com/Articles/6178/A-Practical-Guide-to-NET-DataTables-DataSets-and-D">A Practical Guide to .NET DataTables, DataSets and DataGrids - Part 1</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl05_Link" class="title" href="http://www.codeproject.com/Articles/254506/XAMLFinance-A-Cross-platform-WPF-Silverlight-WP7-A">XAMLFinance – A Cross-platform WPF, Silverlight &amp; WP7 Application</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl06_Link" class="title" href="http://www.codeproject.com/Articles/380265/Presentation-Patterns-for-XAML-based-Applications">Presentation Patterns for XAML based Applications</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl07_Link" class="title" href="http://www.codeproject.com/Articles/28532/My-First-Data-Application-in-Silverlight-2">My First Data Application in Silverlight 2</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl08_Link" class="title" href="http://www.codeproject.com/Articles/75082/Layers-Pattern-in-Practice">Layers Pattern in Practice</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl09_Link" class="title" href="http://www.codeproject.com/Articles/442498/Multi-filtered-WPF-DataGrid-with-MVVM">Multi-filtered WPF DataGrid with MVVM</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl10_Link" class="title" href="http://www.codeproject.com/Articles/97162/WCF-by-Example-Chapter-VI-WPF-Client-Baseline">WCF by Example - Chapter VI - WPF Client - Baseline</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl11_Link" class="title" href="http://www.codeproject.com/Articles/24940/AdventureWorks-WPF-Part-1">AdventureWorks.WPF (Part 1)</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl12_Link" class="title" href="http://www.codeproject.com/Articles/9986/Using-the-DataGrid-Control">Using the DataGrid Control</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl13_Link" class="title" href="http://www.codeproject.com/Articles/26977/A-WatermarkTextBox-in-3-lines-of-XAML">A WatermarkTextBox in 3 lines of XAML</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl14_Link" class="title" href="http://www.codeproject.com/Articles/10088/DataGrids-ViewState-optimization">DataGrid's ViewState optimization</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl15_Link" class="title" href="http://www.codeproject.com/Articles/43074/WPF-Custom-ComboBox">WPF Custom ComboBox</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl16_Link" class="title" href="http://www.codeproject.com/Articles/154038/DataGrid-in-WPF-using-SQL-Server-Compact-3-5-Sp1">DataGrid in WPF using SQL Server Compact 3.5 Sp1</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl17_Link" class="title" href="http://www.codeproject.com/Articles/252958/Access-Controls-in-ViewModel-using-Attached-Proper">Access Controls in ViewModel using Attached Properties</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl18_Link" class="title" href="http://www.codeproject.com/Articles/8666/Practical-use-of-the-DataGrids-ItemDataBound-event">Practical use of the DataGrid's ItemDataBound event.</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl19_Link" class="title" href="http://www.codeproject.com/Articles/66054/A-Bindable-WPF-RichTextBox">A Bindable WPF RichTextBox</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl20_Link" class="title" href="http://www.codeproject.com/Articles/192041/A-Csharp-WPF-NET-4-0-DataGrid-with-Persistent-Cont">A C# WPF .NET 4.0 "DataGrid" with Persistent Controls in Cells</a>
		
	</div>
	
	<div class="content-list-item">
		<a id="ctl00_RelatedArticles_RelatedResults_ctl21_Link" class="title" href="http://www.codeproject.com/Articles/6182/A-Practical-Guide-to-NET-DataTables-DataSets-and-D">A Practical Guide to .NET DataTables, DataSets and DataGrids - Part 4</a>
		
	</div>
	
	</div>
	

				</div>
				<div class="padded-top">
					
				</div>

				
				
			</div>
		</td>
		</tr></tbody></table>

		
		<div class="theme1-background" style="height:2px"></div>

		<div class="extended tiny-text">
			<div class="row">
				<div class="float-left">
					<a id="ctl00_PermaLink" itemprop="url" href="./WPF DataGrid Practical Examples - CodeProject_files/WPF DataGrid Practical Examples - CodeProject.htm">Permalink</a> | 
					<a id="ctl00_AdvertiseLink" href="http://developermedia.com/">Advertise </a> |
					<a id="ctl00_PrivacyLink" href="http://www.codeproject.com/info/privacy.aspx">Privacy</a> |
					<a id="ctl00_Mobile" rel="nofollow" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?display=Mobile">Mobile</a>
					<br>
								
					
					Web03 |
					2.6.130823.1 |
					Last Updated 1 Feb 2009								
				</div>
				<div class="float-right align-right">
					Article Copyright 2008 by Colin Eberhardt<br>Everything else
					Copyright © <a href="mailto:webmaster@codeproject.com">CodeProject</a>, 1999-2013 <br>
					<a id="ctl00_TermsOfUseLink" href="http://www.codeproject.com/info/TermsOfUse.aspx">Terms of Use</a>
				</div>

				


<div class="page-width">
Layout: <a id="ctl00_PageWidth_FixedT" title="Fixed width layout" rel="nofollow" class=" active" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?PageFlow=FixedWidth">fixed</a>
|
<a id="ctl00_PageWidth_FluidT" title="Fluid layout" rel="nofollow" href="http://www.codeproject.com/Articles/30905/WPF-DataGrid-Practical-Examples?PageFlow=Fluid">fluid</a>
</div>



			</div>
		</div>
		

		<br clear="all">
		
			

	</div> 
	</div>
</div>


<div style="display:none;" id="lqm_AdTable">
	
</div>


<script type="text/javascript" language="Javascript" src="./WPF DataGrid Practical Examples - CodeProject_files/jquery.min.js"></script><script type="text/javascript">//<![CDATA[
if (typeof jQuery == 'undefined') {
    document.write(unescape("%3Cscript src='/script/JS/jquery-1.6.2.min.js' type='text/javascript' %3E%3C/script%3E"));
}//]]></script>
<script type="text/javascript" language="Javascript" src="./WPF DataGrid Practical Examples - CodeProject_files/article.min.js"></script>
<script type="text/javascript" language="Javascript" src="./WPF DataGrid Practical Examples - CodeProject_files/navbar.min.js"></script>
<script type="text/javascript" language="Javascript" src="./WPF DataGrid Practical Examples - CodeProject_files/Notifications.min.js"></script>
<script type="text/javascript" language="Javascript" src="./WPF DataGrid Practical Examples - CodeProject_files/MemberProfilePopup.min.js"></script>
<script type="text/javascript" language="Javascript">//<![CDATA[
$(document).ready(function() { anchorAnimate(); });
(function(d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = "//connect.facebook.net/en_GB/all.js#xfbml=1"; fjs.parentNode.insertBefore(js, fjs); }(document, 'script', 'facebook-jssdk'));
(function() {var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true; po.src = 'https://apis.google.com/js/plusone.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s); })();
!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){ js=d.createElement(s);js.id=id; js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
var DMReportsOK = null;function showDMAlert() {   var $div = $('div.msg-728x90');  $div.append($('<img src="/images/alert-top-block.gif" style="right:0;position:absolute;z-index:0">'));}function onDMcallBack(event){   if (event.originalEvent) event = event.originalEvent;   jQuery.support.cors = true;   if (event.data == 'DM-disabled') DMReportsOK = false;   else if (event.data == 'DM-enabled') DMReportsOK = true;}function checkLoaded() {  var recordCheck  = false; var showBlockMsg = false; var block        = 'None'; if (!DMReportsOK && block == 'None' && typeof DMAds === 'undefined')     block = 'ResourceBlocked'; if (DMReportsOK === true) block = 'None'; else if (DMReportsOK === false) block = 'DomModified'; if (recordCheck) {  $.ajax({ url:'/script/AdServe/Ajax/VS.aspx',data:{'adbm':block}, cache:false, async:true }); } if (showBlockMsg && block != 'None')    showDMAlert();}$(document).ready(function() {  $(window).bind('message', onDMcallBack);  setTimeout(checkLoaded, 4000);});
$(function ()
                        {
                        $('.oauth').click(function () {
                            $this = $(this);
                            href = $this.attr('href');
                            var myWindow = window.open(href, 'popup',
                                        'width=800,height=600,location=0,menubar=0,resizeable=0,scrollbars=0,toolbar=0');
                            myWindow.focus();
                            var timer = setInterval(function () {
                                            if (myWindow.closed) {
                                                clearInterval(timer);
                                                // window.location.reload(); // May do a POST reload, shows a warning
                                                window.location = window.location; // force a GET reload
                                            }
                                        }, 200);
                            return false;
                        });
                    });
var oSrchFlt = false, oSrchBox=false,srchBoxFoc=false;
$(document).ready(function() {
 if(InitWatermark)InitWatermark('sb_tb', 'Search for articles, questions, tips');
 var sbar = $('#sb_tb'); 
 var sfilter = $('#SearchFilter');
 if (sbar && sfilter) {
  sfilter.removeClass('popup'); sfilter.hide();
  sbar.blur(function() {
 if (!oSrchFlt)sfilter.hide();
 srchBoxFoc=false;
 /*sbar.animate( { width:'210px' }, { queue:false, duration:300 });
*/ });
  sbar.focus(function() {
 oSrchFlt=false;srchBoxFoc=true;
 sfilter.show();
 /*sbar.animate( { width:'500px' }, { queue:false, duration:300 });
*/ });
  sbar.mouseleave(function() { oSrchBox=false; });
  sbar.mouseover(function() { oSrchBox=true; });
  sfilter.mouseleave(function() { oSrchFlt=false; if (!srchBoxFoc&&!oSrchBox)sfilter.hide();});
  sfilter.mouseover(function() { oSrchFlt=true; });
 }
});
$("#ctl00_RateArticle_RateItemWrapper").removeClass("container-rating");$('#clear-rate_ctl00_RateArticle_RCD').click(function () { $('#ctl00_RateArticle_RCD').hide(); return false;});
function PostBack_ctl00_RateArticle_RateItemWrapper() {
  return rateItem(30905,2,1,true,true,3,'LargeStars');
}
function ChkRtctl00_RateArticle(val, objId) {if (val<=3||true) {
$('div[name=RateItem_' + objId + '] .rating-comment').css("display","");}
else $('div[name=RateItem_' + objId + '] .rating-comment').css("display","none");}

forumDir = '/script/Forums/';
staticServer = '';
allowReporting = false;
allowRating = false;
allowRatingDisplay = true;
var smoothScroll = true;
Selected        = -1;
oldTitle        = document.title;
minMessageScore = 1;
minMessageScore = 5;
abuseScore      = -2;
spamScore       = -1;
getRatingUrl    = '/script/Ratings/Ajax/GetRatings.aspx';
noiseThreshold  = 1;
getRatingRefKey = 'obrs';


//]]>
</script>




<canvas id="cv1" width="1px" height="1px" style="position:absolute;left:0;top:0;pointer-events:none"></canvas><canvas id="cv2" width="1px" height="1px" style="position:absolute;left:0;top:0;pointer-events:none"></canvas><div id="MemberProfilePopupDiv" class="raised box" style="display: none; position: absolute;"></div><div id="MemberProfilePopupDiv" class="raised box" style="display: none; position: absolute;"></div><div id="MemberProfilePopupDiv" class="raised box" style="display: none; position: absolute;"></div><iframe name="oauth2relay498525316" id="oauth2relay498525316" src="./WPF DataGrid Practical Examples - CodeProject_files/postmessageRelay.htm" style="width: 1px; height: 1px; position: absolute; left: -100px;"></iframe></body></html>